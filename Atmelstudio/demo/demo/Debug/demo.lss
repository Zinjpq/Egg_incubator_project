
demo.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001208  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000066  00800060  00001208  0000129c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000003  008000c6  008000c6  00001302  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001302  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001360  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e0  00000000  00000000  0000139c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000014d9  00000000  00000000  0000147c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009b4  00000000  00000000  00002955  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000008f6  00000000  00000000  00003309  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000258  00000000  00000000  00003c00  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000059f  00000000  00000000  00003e58  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000e06  00000000  00000000  000043f7  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c0  00000000  00000000  000051fd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__ctors_end>
       4:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
       8:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
       c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      10:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      14:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      18:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      1c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      20:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      24:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      28:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      2c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      30:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      34:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      38:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      3c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      40:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      44:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      48:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      4c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      50:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>

00000054 <__trampolines_end>:
      54:	00 40       	sbci	r16, 0x00	; 0
      56:	7a 10       	cpse	r7, r10
      58:	f3 5a       	subi	r31, 0xA3	; 163
      5a:	00 a0       	ldd	r0, Z+32	; 0x20
      5c:	72 4e       	sbci	r23, 0xE2	; 226
      5e:	18 09       	sbc	r17, r8
      60:	00 10       	cpse	r0, r0
      62:	a5 d4       	rcall	.+2378   	; 0x9ae <vfprintf+0x19e>
      64:	e8 00       	.word	0x00e8	; ????
      66:	00 e8       	ldi	r16, 0x80	; 128
      68:	76 48       	sbci	r23, 0x86	; 134
      6a:	17 00       	.word	0x0017	; ????
      6c:	00 e4       	ldi	r16, 0x40	; 64
      6e:	0b 54       	subi	r16, 0x4B	; 75
      70:	02 00       	.word	0x0002	; ????
      72:	00 ca       	rjmp	.-3072   	; 0xfffff474 <__eeprom_end+0xff7ef474>
      74:	9a 3b       	cpi	r25, 0xBA	; 186
      76:	00 00       	nop
      78:	00 e1       	ldi	r16, 0x10	; 16
      7a:	f5 05       	cpc	r31, r5
      7c:	00 00       	nop
      7e:	80 96       	adiw	r24, 0x20	; 32
      80:	98 00       	.word	0x0098	; ????
      82:	00 00       	nop
      84:	40 42       	sbci	r20, 0x20	; 32
      86:	0f 00       	.word	0x000f	; ????
      88:	00 00       	nop
      8a:	a0 86       	std	Z+8, r10	; 0x08
      8c:	01 00       	.word	0x0001	; ????
      8e:	00 00       	nop
      90:	10 27       	eor	r17, r16
      92:	00 00       	nop
      94:	00 00       	nop
      96:	e8 03       	fmulsu	r22, r16
      98:	00 00       	nop
      9a:	00 00       	nop
      9c:	64 00       	.word	0x0064	; ????
      9e:	00 00       	nop
      a0:	00 00       	nop
      a2:	0a 00       	.word	0x000a	; ????
      a4:	00 00       	nop
      a6:	00 00       	nop
      a8:	01 00       	.word	0x0001	; ????
      aa:	00 00       	nop
      ac:	00 00       	nop
      ae:	2c 76       	andi	r18, 0x6C	; 108
      b0:	d8 88       	ldd	r13, Y+16	; 0x10
      b2:	dc 67       	ori	r29, 0x7C	; 124
      b4:	4f 08       	sbc	r4, r15
      b6:	23 df       	rcall	.-442    	; 0xfffffefe <__eeprom_end+0xff7efefe>
      b8:	c1 df       	rcall	.-126    	; 0x3c <__FUSE_REGION_LENGTH__+0x3a>
      ba:	ae 59       	subi	r26, 0x9E	; 158
      bc:	e1 b1       	in	r30, 0x01	; 1
      be:	b7 96       	adiw	r30, 0x27	; 39
      c0:	e5 e3       	ldi	r30, 0x35	; 53
      c2:	e4 53       	subi	r30, 0x34	; 52
      c4:	c6 3a       	cpi	r28, 0xA6	; 166
      c6:	e6 51       	subi	r30, 0x16	; 22
      c8:	99 76       	andi	r25, 0x69	; 105
      ca:	96 e8       	ldi	r25, 0x86	; 134
      cc:	e6 c2       	rjmp	.+1484   	; 0x69a <__cmpsf2>
      ce:	84 26       	eor	r8, r20
      d0:	eb 89       	ldd	r30, Y+19	; 0x13
      d2:	8c 9b       	sbis	0x11, 4	; 17
      d4:	62 ed       	ldi	r22, 0xD2	; 210
      d6:	40 7c       	andi	r20, 0xC0	; 192
      d8:	6f fc       	.word	0xfc6f	; ????
      da:	ef bc       	out	0x2f, r14	; 47
      dc:	9c 9f       	mul	r25, r28
      de:	40 f2       	brcs	.-112    	; 0x70 <__trampolines_end+0x1c>
      e0:	ba a5       	ldd	r27, Y+42	; 0x2a
      e2:	6f a5       	ldd	r22, Y+47	; 0x2f
      e4:	f4 90       	lpm	r15, Z
      e6:	05 5a       	subi	r16, 0xA5	; 165
      e8:	2a f7       	brpl	.-54     	; 0xb4 <__trampolines_end+0x60>
      ea:	5c 93       	st	X, r21
      ec:	6b 6c       	ori	r22, 0xCB	; 203
      ee:	f9 67       	ori	r31, 0x79	; 121
      f0:	6d c1       	rjmp	.+730    	; 0x3cc <DHT_Read+0x7e>
      f2:	1b fc       	.word	0xfc1b	; ????
      f4:	e0 e4       	ldi	r30, 0x40	; 64
      f6:	0d 47       	sbci	r16, 0x7D	; 125
      f8:	fe f5       	brtc	.+126    	; 0x178 <.do_clear_bss_loop>
      fa:	20 e6       	ldi	r18, 0x60	; 96
      fc:	b5 00       	.word	0x00b5	; ????
      fe:	d0 ed       	ldi	r29, 0xD0	; 208
     100:	90 2e       	mov	r9, r16
     102:	03 00       	.word	0x0003	; ????
     104:	94 35       	cpi	r25, 0x54	; 84
     106:	77 05       	cpc	r23, r7
     108:	00 80       	ld	r0, Z
     10a:	84 1e       	adc	r8, r20
     10c:	08 00       	.word	0x0008	; ????
     10e:	00 20       	and	r0, r0
     110:	4e 0a       	sbc	r4, r30
     112:	00 00       	nop
     114:	00 c8       	rjmp	.-4096   	; 0xfffff116 <__eeprom_end+0xff7ef116>
     116:	0c 33       	cpi	r16, 0x3C	; 60
     118:	33 33       	cpi	r19, 0x33	; 51
     11a:	33 0f       	add	r19, r19
     11c:	98 6e       	ori	r25, 0xE8	; 232
     11e:	12 83       	std	Z+2, r17	; 0x02
     120:	11 41       	sbci	r17, 0x11	; 17
     122:	ef 8d       	ldd	r30, Y+31	; 0x1f
     124:	21 14       	cp	r2, r1
     126:	89 3b       	cpi	r24, 0xB9	; 185
     128:	e6 55       	subi	r30, 0x56	; 86
     12a:	16 cf       	rjmp	.-468    	; 0xffffff58 <__eeprom_end+0xff7eff58>
     12c:	fe e6       	ldi	r31, 0x6E	; 110
     12e:	db 18       	sub	r13, r11
     130:	d1 84       	ldd	r13, Z+9	; 0x09
     132:	4b 38       	cpi	r20, 0x8B	; 139
     134:	1b f7       	brvc	.-58     	; 0xfc <__trampolines_end+0xa8>
     136:	7c 1d       	adc	r23, r12
     138:	90 1d       	adc	r25, r0
     13a:	a4 bb       	out	0x14, r26	; 20
     13c:	e4 24       	eor	r14, r4
     13e:	20 32       	cpi	r18, 0x20	; 32
     140:	84 72       	andi	r24, 0x24	; 36
     142:	5e 22       	and	r5, r30
     144:	81 00       	.word	0x0081	; ????
     146:	c9 f1       	breq	.+114    	; 0x1ba <DHT_Setup+0x12>
     148:	24 ec       	ldi	r18, 0xC4	; 196
     14a:	a1 e5       	ldi	r26, 0x51	; 81
     14c:	3d 27       	eor	r19, r29

0000014e <__ctors_end>:
     14e:	11 24       	eor	r1, r1
     150:	1f be       	out	0x3f, r1	; 63
     152:	cf e5       	ldi	r28, 0x5F	; 95
     154:	d4 e0       	ldi	r29, 0x04	; 4
     156:	de bf       	out	0x3e, r29	; 62
     158:	cd bf       	out	0x3d, r28	; 61

0000015a <__do_copy_data>:
     15a:	10 e0       	ldi	r17, 0x00	; 0
     15c:	a0 e6       	ldi	r26, 0x60	; 96
     15e:	b0 e0       	ldi	r27, 0x00	; 0
     160:	e8 e0       	ldi	r30, 0x08	; 8
     162:	f2 e1       	ldi	r31, 0x12	; 18
     164:	02 c0       	rjmp	.+4      	; 0x16a <__do_copy_data+0x10>
     166:	05 90       	lpm	r0, Z+
     168:	0d 92       	st	X+, r0
     16a:	a6 3c       	cpi	r26, 0xC6	; 198
     16c:	b1 07       	cpc	r27, r17
     16e:	d9 f7       	brne	.-10     	; 0x166 <__do_copy_data+0xc>

00000170 <__do_clear_bss>:
     170:	20 e0       	ldi	r18, 0x00	; 0
     172:	a6 ec       	ldi	r26, 0xC6	; 198
     174:	b0 e0       	ldi	r27, 0x00	; 0
     176:	01 c0       	rjmp	.+2      	; 0x17a <.do_clear_bss_start>

00000178 <.do_clear_bss_loop>:
     178:	1d 92       	st	X+, r1

0000017a <.do_clear_bss_start>:
     17a:	a9 3c       	cpi	r26, 0xC9	; 201
     17c:	b2 07       	cpc	r27, r18
     17e:	e1 f7       	brne	.-8      	; 0x178 <.do_clear_bss_loop>
     180:	0e 94 11 03 	call	0x622	; 0x622 <main>
     184:	0c 94 02 09 	jmp	0x1204	; 0x1204 <_exit>

00000188 <__bad_interrupt>:
     188:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000018c <ExtractTemperature>:
static double ExtractTemperature(uint8_t Data2, uint8_t Data3)
{
	double temp = 0.0;

	#if (DHT_Type == DHT11)
		temp = Data2;
     18c:	68 2f       	mov	r22, r24
     18e:	70 e0       	ldi	r23, 0x00	; 0
     190:	80 e0       	ldi	r24, 0x00	; 0
     192:	90 e0       	ldi	r25, 0x00	; 0
     194:	0e 94 52 03 	call	0x6a4	; 0x6a4 <__floatunsisf>
		//(Integral<<8 + Decimal) / 10
		temp = (BitCheck(Data2, 7) ? ((((Data2 & 0x7F) << 8) | Data3) / (-10.0)) : (((Data2 << 8) | Data3) / 10.0));
	#endif

	return temp;
}
     198:	08 95       	ret

0000019a <ExtractHumidity>:
static double ExtractHumidity(uint8_t Data0, uint8_t Data1)
{
	double hum = 0.0;

	#if (DHT_Type == DHT11)
		hum = Data0;
     19a:	68 2f       	mov	r22, r24
     19c:	70 e0       	ldi	r23, 0x00	; 0
     19e:	80 e0       	ldi	r24, 0x00	; 0
     1a0:	90 e0       	ldi	r25, 0x00	; 0
     1a2:	0e 94 52 03 	call	0x6a4	; 0x6a4 <__floatunsisf>
		//(Integral<<8 + Decimal) / 10
		hum = ((Data0<<8) | Data1) / 10.0;
	#endif

	return hum;
}
     1a6:	08 95       	ret

000001a8 <DHT_Setup>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     1a8:	2f e7       	ldi	r18, 0x7F	; 127
     1aa:	8a e1       	ldi	r24, 0x1A	; 26
     1ac:	96 e0       	ldi	r25, 0x06	; 6
     1ae:	21 50       	subi	r18, 0x01	; 1
     1b0:	80 40       	sbci	r24, 0x00	; 0
     1b2:	90 40       	sbci	r25, 0x00	; 0
     1b4:	e1 f7       	brne	.-8      	; 0x1ae <DHT_Setup+0x6>
     1b6:	00 c0       	rjmp	.+0      	; 0x1b8 <DHT_Setup+0x10>
     1b8:	00 00       	nop
//----- Functions -----------------------------//
//Setup sensor.
void DHT_Setup()
{
	_delay_ms(__DHT_Delay_Setup);
	__DHT_STATUS = DHT_Ok;
     1ba:	10 92 c8 00 	sts	0x00C8, r1	; 0x8000c8 <__DHT_STATUS>
     1be:	08 95       	ret

000001c0 <DHT_GetStatus>:

//Get sensor status.
enum DHT_Status_t DHT_GetStatus()
{
	return (__DHT_STATUS);
}
     1c0:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__DHT_STATUS>
     1c4:	08 95       	ret

000001c6 <DHT_ReadRaw>:

//Read raw buffer from sensor.
enum DHT_Status_t DHT_ReadRaw(uint8_t Data[4])
{
     1c6:	cf 93       	push	r28
     1c8:	df 93       	push	r29
     1ca:	00 d0       	rcall	.+0      	; 0x1cc <DHT_ReadRaw+0x6>
     1cc:	00 d0       	rcall	.+0      	; 0x1ce <DHT_ReadRaw+0x8>
     1ce:	1f 92       	push	r1
     1d0:	cd b7       	in	r28, 0x3d	; 61
     1d2:	de b7       	in	r29, 0x3e	; 62
     1d4:	fc 01       	movw	r30, r24
	uint8_t buffer[5] = {0, 0, 0, 0, 0};
     1d6:	9e 01       	movw	r18, r28
     1d8:	2f 5f       	subi	r18, 0xFF	; 255
     1da:	3f 4f       	sbci	r19, 0xFF	; 255
     1dc:	85 e0       	ldi	r24, 0x05	; 5
     1de:	d9 01       	movw	r26, r18
     1e0:	1d 92       	st	X+, r1
     1e2:	8a 95       	dec	r24
     1e4:	e9 f7       	brne	.-6      	; 0x1e0 <DHT_ReadRaw+0x1a>
	uint8_t retries, i;
	int8_t j;
	__DHT_STATUS = DHT_Ok;
     1e6:	10 92 c8 00 	sts	0x00C8, r1	; 0x8000c8 <__DHT_STATUS>

	//----- Step 1 - Start communication -----
	if (__DHT_STATUS == DHT_Ok)
	{
		//Request data
		DigitalWrite(DHT_Pin, Low);			//DHT_PIN = 0
     1ea:	8b b3       	in	r24, 0x1b	; 27
     1ec:	8e 7f       	andi	r24, 0xFE	; 254
     1ee:	8b bb       	out	0x1b, r24	; 27
		PinMode(DHT_Pin, Output);			//DHT_PIN = Output
     1f0:	8a b3       	in	r24, 0x1a	; 26
     1f2:	81 60       	ori	r24, 0x01	; 1
     1f4:	8a bb       	out	0x1a, r24	; 26
     1f6:	83 ed       	ldi	r24, 0xD3	; 211
     1f8:	90 e3       	ldi	r25, 0x30	; 48
     1fa:	01 97       	sbiw	r24, 0x01	; 1
     1fc:	f1 f7       	brne	.-4      	; 0x1fa <DHT_ReadRaw+0x34>
     1fe:	00 c0       	rjmp	.+0      	; 0x200 <__EEPROM_REGION_LENGTH__>
     200:	00 00       	nop
		_delay_ms(__DHT_Delay_Read);

		//Setup DHT_PIN as input with pull-up resistor so as to read data
		DigitalWrite(DHT_Pin, High);		//DHT_PIN = 1 (Pull-up resistor)
     202:	8b b3       	in	r24, 0x1b	; 27
     204:	81 60       	ori	r24, 0x01	; 1
     206:	8b bb       	out	0x1b, r24	; 27
		PinMode(DHT_Pin, Input);			//DHT_PIN = Input
     208:	8a b3       	in	r24, 0x1a	; 26
     20a:	8e 7f       	andi	r24, 0xFE	; 254
     20c:	8a bb       	out	0x1a, r24	; 26

		//Wait for response for 20-40us
		retries = 0;
     20e:	80 e0       	ldi	r24, 0x00	; 0
		while (DigitalRead(DHT_Pin))
     210:	08 c0       	rjmp	.+16     	; 0x222 <__EEPROM_REGION_LENGTH__+0x22>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     212:	00 c0       	rjmp	.+0      	; 0x214 <__EEPROM_REGION_LENGTH__+0x14>
		{
			_delay_us(2);
			retries += 2;
     214:	8e 5f       	subi	r24, 0xFE	; 254
			if (retries > 60)
     216:	8d 33       	cpi	r24, 0x3D	; 61
     218:	20 f0       	brcs	.+8      	; 0x222 <__EEPROM_REGION_LENGTH__+0x22>
			{
				__DHT_STATUS = DHT_Error_Timeout;	//Timeout error
     21a:	84 e0       	ldi	r24, 0x04	; 4
     21c:	80 93 c8 00 	sts	0x00C8, r24	; 0x8000c8 <__DHT_STATUS>
				break;
     220:	02 c0       	rjmp	.+4      	; 0x226 <__EEPROM_REGION_LENGTH__+0x26>
		DigitalWrite(DHT_Pin, High);		//DHT_PIN = 1 (Pull-up resistor)
		PinMode(DHT_Pin, Input);			//DHT_PIN = Input

		//Wait for response for 20-40us
		retries = 0;
		while (DigitalRead(DHT_Pin))
     222:	c8 99       	sbic	0x19, 0	; 25
     224:	f6 cf       	rjmp	.-20     	; 0x212 <__EEPROM_REGION_LENGTH__+0x12>
		}
	}
	//----------------------------------------

	//----- Step 2 - Wait for response -----
	if (__DHT_STATUS == DHT_Ok)
     226:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__DHT_STATUS>
     22a:	88 23       	and	r24, r24
     22c:	49 f0       	breq	.+18     	; 0x240 <__EEPROM_REGION_LENGTH__+0x40>
     22e:	17 c0       	rjmp	.+46     	; 0x25e <__EEPROM_REGION_LENGTH__+0x5e>
     230:	00 c0       	rjmp	.+0      	; 0x232 <__EEPROM_REGION_LENGTH__+0x32>
		//Wait for the first response to finish (low for ~80us)
		retries = 0;
		while (!DigitalRead(DHT_Pin))
		{
			_delay_us(2);
			retries += 2;
     232:	8e 5f       	subi	r24, 0xFE	; 254
			if (retries > 100)
     234:	85 36       	cpi	r24, 0x65	; 101
     236:	28 f0       	brcs	.+10     	; 0x242 <__EEPROM_REGION_LENGTH__+0x42>
			{
				__DHT_STATUS = DHT_Error_Timeout;	//Timeout error
     238:	84 e0       	ldi	r24, 0x04	; 4
     23a:	80 93 c8 00 	sts	0x00C8, r24	; 0x8000c8 <__DHT_STATUS>
				break;
     23e:	0c c0       	rjmp	.+24     	; 0x258 <__EEPROM_REGION_LENGTH__+0x58>
     240:	80 e0       	ldi	r24, 0x00	; 0
	if (__DHT_STATUS == DHT_Ok)
	{
		//Response sequence began
		//Wait for the first response to finish (low for ~80us)
		retries = 0;
		while (!DigitalRead(DHT_Pin))
     242:	c8 9b       	sbis	0x19, 0	; 25
     244:	f5 cf       	rjmp	.-22     	; 0x230 <__EEPROM_REGION_LENGTH__+0x30>
     246:	08 c0       	rjmp	.+16     	; 0x258 <__EEPROM_REGION_LENGTH__+0x58>
     248:	00 c0       	rjmp	.+0      	; 0x24a <__EEPROM_REGION_LENGTH__+0x4a>
		//Wait for the last response to finish (high for ~80us)
		retries = 0;
		while(DigitalRead(DHT_Pin))
		{
			_delay_us(2);
			retries += 2;
     24a:	8e 5f       	subi	r24, 0xFE	; 254
			if (retries > 100)
     24c:	85 36       	cpi	r24, 0x65	; 101
     24e:	28 f0       	brcs	.+10     	; 0x25a <__EEPROM_REGION_LENGTH__+0x5a>
			{
				__DHT_STATUS = DHT_Error_Timeout;	//Timeout error
     250:	84 e0       	ldi	r24, 0x04	; 4
     252:	80 93 c8 00 	sts	0x00C8, r24	; 0x8000c8 <__DHT_STATUS>
				break;
     256:	03 c0       	rjmp	.+6      	; 0x25e <__EEPROM_REGION_LENGTH__+0x5e>
     258:	80 e0       	ldi	r24, 0x00	; 0
				break;
			}
		}
		//Wait for the last response to finish (high for ~80us)
		retries = 0;
		while(DigitalRead(DHT_Pin))
     25a:	c8 99       	sbic	0x19, 0	; 25
     25c:	f5 cf       	rjmp	.-22     	; 0x248 <__EEPROM_REGION_LENGTH__+0x48>
		}
	}
	//--------------------------------------

	//----- Step 3 - Data transmission -----
	if (__DHT_STATUS == DHT_Ok)
     25e:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__DHT_STATUS>
     262:	88 23       	and	r24, r24
     264:	09 f4       	brne	.+2      	; 0x268 <__EEPROM_REGION_LENGTH__+0x68>
     266:	40 c0       	rjmp	.+128    	; 0x2e8 <__EEPROM_REGION_LENGTH__+0xe8>
     268:	42 c0       	rjmp	.+132    	; 0x2ee <__EEPROM_REGION_LENGTH__+0xee>
     26a:	00 c0       	rjmp	.+0      	; 0x26c <__EEPROM_REGION_LENGTH__+0x6c>
				//There is always a leading low level of 50 us
				retries = 0;
				while(!DigitalRead(DHT_Pin))
				{
					_delay_us(2);
					retries += 2;
     26c:	9e 5f       	subi	r25, 0xFE	; 254
					if (retries > 70)
     26e:	97 34       	cpi	r25, 0x47	; 71
     270:	38 f0       	brcs	.+14     	; 0x280 <__EEPROM_REGION_LENGTH__+0x80>
					{
						__DHT_STATUS = DHT_Error_Timeout;	//Timeout error
     272:	84 e0       	ldi	r24, 0x04	; 4
     274:	80 93 c8 00 	sts	0x00C8, r24	; 0x8000c8 <__DHT_STATUS>
						j = -1;								//Break inner for-loop
     278:	2f ef       	ldi	r18, 0xFF	; 255
						i = 5;								//Break outer for-loop
     27a:	85 e0       	ldi	r24, 0x05	; 5
						break;								//Break while loop
     27c:	03 c0       	rjmp	.+6      	; 0x284 <__EEPROM_REGION_LENGTH__+0x84>
     27e:	90 e0       	ldi	r25, 0x00	; 0
		for (i = 0 ; i < 5 ; i++)
			for (j = 7 ; j >= 0 ; j--)
			{
				//There is always a leading low level of 50 us
				retries = 0;
				while(!DigitalRead(DHT_Pin))
     280:	c8 9b       	sbis	0x19, 0	; 25
     282:	f3 cf       	rjmp	.-26     	; 0x26a <__EEPROM_REGION_LENGTH__+0x6a>
						i = 5;								//Break outer for-loop
						break;								//Break while loop
					}
				}

				if (__DHT_STATUS == DHT_Ok)
     284:	90 91 c8 00 	lds	r25, 0x00C8	; 0x8000c8 <__DHT_STATUS>
     288:	91 11       	cpse	r25, r1
     28a:	27 c0       	rjmp	.+78     	; 0x2da <__EEPROM_REGION_LENGTH__+0xda>
     28c:	9b e0       	ldi	r25, 0x0B	; 11
     28e:	9a 95       	dec	r25
     290:	f1 f7       	brne	.-4      	; 0x28e <__EEPROM_REGION_LENGTH__+0x8e>
     292:	00 c0       	rjmp	.+0      	; 0x294 <__EEPROM_REGION_LENGTH__+0x94>
				{
					//We read data bit || 26-28us means '0' || 70us means '1'
					_delay_us(35);							//Wait for more than 28us
					if (DigitalRead(DHT_Pin))				//If HIGH
     294:	c8 9b       	sbis	0x19, 0	; 25
     296:	1e c0       	rjmp	.+60     	; 0x2d4 <__EEPROM_REGION_LENGTH__+0xd4>
						BitSet(buffer[i], j);				//bit = '1'
     298:	41 e0       	ldi	r20, 0x01	; 1
     29a:	50 e0       	ldi	r21, 0x00	; 0
     29c:	60 e0       	ldi	r22, 0x00	; 0
     29e:	70 e0       	ldi	r23, 0x00	; 0
     2a0:	02 2e       	mov	r0, r18
     2a2:	04 c0       	rjmp	.+8      	; 0x2ac <__EEPROM_REGION_LENGTH__+0xac>
     2a4:	44 0f       	add	r20, r20
     2a6:	55 1f       	adc	r21, r21
     2a8:	66 1f       	adc	r22, r22
     2aa:	77 1f       	adc	r23, r23
     2ac:	0a 94       	dec	r0
     2ae:	d2 f7       	brpl	.-12     	; 0x2a4 <__EEPROM_REGION_LENGTH__+0xa4>
     2b0:	a1 e0       	ldi	r26, 0x01	; 1
     2b2:	b0 e0       	ldi	r27, 0x00	; 0
     2b4:	ac 0f       	add	r26, r28
     2b6:	bd 1f       	adc	r27, r29
     2b8:	a8 0f       	add	r26, r24
     2ba:	b1 1d       	adc	r27, r1
     2bc:	9c 91       	ld	r25, X
     2be:	49 2b       	or	r20, r25
     2c0:	4c 93       	st	X, r20
     2c2:	08 c0       	rjmp	.+16     	; 0x2d4 <__EEPROM_REGION_LENGTH__+0xd4>
     2c4:	00 c0       	rjmp	.+0      	; 0x2c6 <__EEPROM_REGION_LENGTH__+0xc6>

					retries = 0;
					while(DigitalRead(DHT_Pin))
					{
						_delay_us(2);
						retries += 2;
     2c6:	9e 5f       	subi	r25, 0xFE	; 254
						if (retries > 100)
     2c8:	95 36       	cpi	r25, 0x65	; 101
     2ca:	28 f0       	brcs	.+10     	; 0x2d6 <__EEPROM_REGION_LENGTH__+0xd6>
						{
							__DHT_STATUS = DHT_Error_Timeout;	//Timeout error
     2cc:	94 e0       	ldi	r25, 0x04	; 4
     2ce:	90 93 c8 00 	sts	0x00C8, r25	; 0x8000c8 <__DHT_STATUS>
							break;
     2d2:	03 c0       	rjmp	.+6      	; 0x2da <__EEPROM_REGION_LENGTH__+0xda>
					retries += 2;
					if (retries > 70)
					{
						__DHT_STATUS = DHT_Error_Timeout;	//Timeout error
						j = -1;								//Break inner for-loop
						i = 5;								//Break outer for-loop
     2d4:	90 e0       	ldi	r25, 0x00	; 0
					_delay_us(35);							//Wait for more than 28us
					if (DigitalRead(DHT_Pin))				//If HIGH
						BitSet(buffer[i], j);				//bit = '1'

					retries = 0;
					while(DigitalRead(DHT_Pin))
     2d6:	c8 99       	sbic	0x19, 0	; 25
     2d8:	f5 cf       	rjmp	.-22     	; 0x2c4 <__EEPROM_REGION_LENGTH__+0xc4>
	//----- Step 3 - Data transmission -----
	if (__DHT_STATUS == DHT_Ok)
	{
		//Reading 5 bytes, bit by bit
		for (i = 0 ; i < 5 ; i++)
			for (j = 7 ; j >= 0 ; j--)
     2da:	21 50       	subi	r18, 0x01	; 1
     2dc:	01 c0       	rjmp	.+2      	; 0x2e0 <__EEPROM_REGION_LENGTH__+0xe0>
     2de:	27 e0       	ldi	r18, 0x07	; 7
     2e0:	22 23       	and	r18, r18
     2e2:	6c f6       	brge	.-102    	; 0x27e <__EEPROM_REGION_LENGTH__+0x7e>

	//----- Step 3 - Data transmission -----
	if (__DHT_STATUS == DHT_Ok)
	{
		//Reading 5 bytes, bit by bit
		for (i = 0 ; i < 5 ; i++)
     2e4:	8f 5f       	subi	r24, 0xFF	; 255
     2e6:	01 c0       	rjmp	.+2      	; 0x2ea <__EEPROM_REGION_LENGTH__+0xea>
     2e8:	80 e0       	ldi	r24, 0x00	; 0
     2ea:	85 30       	cpi	r24, 0x05	; 5
     2ec:	c0 f3       	brcs	.-16     	; 0x2de <__EEPROM_REGION_LENGTH__+0xde>
	}
	//--------------------------------------


	//----- Step 4 - Check checksum and return data -----
	if (__DHT_STATUS == DHT_Ok)
     2ee:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__DHT_STATUS>
     2f2:	81 11       	cpse	r24, r1
     2f4:	22 c0       	rjmp	.+68     	; 0x33a <__EEPROM_REGION_LENGTH__+0x13a>
	{
		if (((uint8_t)(buffer[0] + buffer[1] + buffer[2] + buffer[3])) != buffer[4])
     2f6:	39 81       	ldd	r19, Y+1	; 0x01
     2f8:	2a 81       	ldd	r18, Y+2	; 0x02
     2fa:	9b 81       	ldd	r25, Y+3	; 0x03
     2fc:	8c 81       	ldd	r24, Y+4	; 0x04
     2fe:	23 0f       	add	r18, r19
     300:	92 0f       	add	r25, r18
     302:	89 0f       	add	r24, r25
     304:	9d 81       	ldd	r25, Y+5	; 0x05
     306:	89 17       	cp	r24, r25
     308:	a9 f0       	breq	.+42     	; 0x334 <__EEPROM_REGION_LENGTH__+0x134>
		{
			__DHT_STATUS = DHT_Error_Checksum;	//Checksum error
     30a:	83 e0       	ldi	r24, 0x03	; 3
     30c:	80 93 c8 00 	sts	0x00C8, r24	; 0x8000c8 <__DHT_STATUS>
     310:	14 c0       	rjmp	.+40     	; 0x33a <__EEPROM_REGION_LENGTH__+0x13a>
			//data[1] = Humidity		(dec)
			//data[2] = Temperature		(int)
			//data[3] = Temperature		(dec)
			//data[4] = Checksum
			for (i = 0 ; i < 4 ; i++)
				Data[i] = buffer[i];
     312:	28 2f       	mov	r18, r24
     314:	30 e0       	ldi	r19, 0x00	; 0
     316:	bf 01       	movw	r22, r30
     318:	62 0f       	add	r22, r18
     31a:	73 1f       	adc	r23, r19
     31c:	a1 e0       	ldi	r26, 0x01	; 1
     31e:	b0 e0       	ldi	r27, 0x00	; 0
     320:	ac 0f       	add	r26, r28
     322:	bd 1f       	adc	r27, r29
     324:	2a 0f       	add	r18, r26
     326:	3b 1f       	adc	r19, r27
     328:	d9 01       	movw	r26, r18
     32a:	9c 91       	ld	r25, X
     32c:	db 01       	movw	r26, r22
     32e:	9c 93       	st	X, r25
			//data[0] = Humidity		(int)
			//data[1] = Humidity		(dec)
			//data[2] = Temperature		(int)
			//data[3] = Temperature		(dec)
			//data[4] = Checksum
			for (i = 0 ; i < 4 ; i++)
     330:	8f 5f       	subi	r24, 0xFF	; 255
     332:	01 c0       	rjmp	.+2      	; 0x336 <__EEPROM_REGION_LENGTH__+0x136>
     334:	80 e0       	ldi	r24, 0x00	; 0
     336:	84 30       	cpi	r24, 0x04	; 4
     338:	60 f3       	brcs	.-40     	; 0x312 <__EEPROM_REGION_LENGTH__+0x112>
				Data[i] = buffer[i];
		}
	}
	//---------------------------------------------------

	return DHT_GetStatus();
     33a:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <DHT_GetStatus>
}
     33e:	0f 90       	pop	r0
     340:	0f 90       	pop	r0
     342:	0f 90       	pop	r0
     344:	0f 90       	pop	r0
     346:	0f 90       	pop	r0
     348:	df 91       	pop	r29
     34a:	cf 91       	pop	r28
     34c:	08 95       	ret

0000034e <DHT_Read>:
	return DHT_Read(waste, Humidity);
}

//Read temperature and humidity.
enum DHT_Status_t DHT_Read(double *Temperature, double *Humidity)
{
     34e:	8f 92       	push	r8
     350:	9f 92       	push	r9
     352:	af 92       	push	r10
     354:	bf 92       	push	r11
     356:	cf 92       	push	r12
     358:	df 92       	push	r13
     35a:	ef 92       	push	r14
     35c:	ff 92       	push	r15
     35e:	0f 93       	push	r16
     360:	1f 93       	push	r17
     362:	cf 93       	push	r28
     364:	df 93       	push	r29
     366:	00 d0       	rcall	.+0      	; 0x368 <DHT_Read+0x1a>
     368:	00 d0       	rcall	.+0      	; 0x36a <DHT_Read+0x1c>
     36a:	cd b7       	in	r28, 0x3d	; 61
     36c:	de b7       	in	r29, 0x3e	; 62
     36e:	8c 01       	movw	r16, r24
     370:	7b 01       	movw	r14, r22
	uint8_t data[4] = { 0, 0, 0, 0 };
     372:	19 82       	std	Y+1, r1	; 0x01
     374:	1a 82       	std	Y+2, r1	; 0x02
     376:	1b 82       	std	Y+3, r1	; 0x03
     378:	1c 82       	std	Y+4, r1	; 0x04

	//Read data
	enum DHT_Status_t status =  DHT_ReadRaw(data);
     37a:	ce 01       	movw	r24, r28
     37c:	01 96       	adiw	r24, 0x01	; 1
     37e:	0e 94 e3 00 	call	0x1c6	; 0x1c6 <DHT_ReadRaw>

	//If read successfully
	if (status == DHT_Ok)
     382:	81 11       	cpse	r24, r1
     384:	47 c0       	rjmp	.+142    	; 0x414 <__DATA_REGION_LENGTH__+0x14>
	{
		//Calculate values
		*Temperature = ExtractTemperature(data[2], data[3]);
     386:	6c 81       	ldd	r22, Y+4	; 0x04
     388:	8b 81       	ldd	r24, Y+3	; 0x03
     38a:	0e 94 c6 00 	call	0x18c	; 0x18c <ExtractTemperature>
     38e:	f8 01       	movw	r30, r16
     390:	60 83       	st	Z, r22
     392:	71 83       	std	Z+1, r23	; 0x01
     394:	82 83       	std	Z+2, r24	; 0x02
     396:	93 83       	std	Z+3, r25	; 0x03
		*Humidity = ExtractHumidity(data[0], data[1]);
     398:	6a 81       	ldd	r22, Y+2	; 0x02
     39a:	89 81       	ldd	r24, Y+1	; 0x01
     39c:	0e 94 cd 00 	call	0x19a	; 0x19a <ExtractHumidity>
     3a0:	4b 01       	movw	r8, r22
     3a2:	5c 01       	movw	r10, r24
     3a4:	f7 01       	movw	r30, r14
     3a6:	60 83       	st	Z, r22
     3a8:	71 83       	std	Z+1, r23	; 0x01
     3aa:	82 83       	std	Z+2, r24	; 0x02
     3ac:	93 83       	std	Z+3, r25	; 0x03

		//Check values
		if ((*Temperature < __DHT_Temperature_Min) || (*Temperature > __DHT_Temperature_Max))
     3ae:	f8 01       	movw	r30, r16
     3b0:	c0 80       	ld	r12, Z
     3b2:	d1 80       	ldd	r13, Z+1	; 0x01
     3b4:	e2 80       	ldd	r14, Z+2	; 0x02
     3b6:	f3 80       	ldd	r15, Z+3	; 0x03
     3b8:	20 e0       	ldi	r18, 0x00	; 0
     3ba:	30 e0       	ldi	r19, 0x00	; 0
     3bc:	a9 01       	movw	r20, r18
     3be:	c7 01       	movw	r24, r14
     3c0:	b6 01       	movw	r22, r12
     3c2:	0e 94 4d 03 	call	0x69a	; 0x69a <__cmpsf2>
     3c6:	88 23       	and	r24, r24
     3c8:	54 f0       	brlt	.+20     	; 0x3de <DHT_Read+0x90>
     3ca:	20 e0       	ldi	r18, 0x00	; 0
     3cc:	30 e0       	ldi	r19, 0x00	; 0
     3ce:	48 e4       	ldi	r20, 0x48	; 72
     3d0:	52 e4       	ldi	r21, 0x42	; 66
     3d2:	c7 01       	movw	r24, r14
     3d4:	b6 01       	movw	r22, r12
     3d6:	0e 94 b3 03 	call	0x766	; 0x766 <__gesf2>
     3da:	18 16       	cp	r1, r24
     3dc:	24 f4       	brge	.+8      	; 0x3e6 <DHT_Read+0x98>
			__DHT_STATUS = DHT_Error_Temperature;
     3de:	82 e0       	ldi	r24, 0x02	; 2
     3e0:	80 93 c8 00 	sts	0x00C8, r24	; 0x8000c8 <__DHT_STATUS>
     3e4:	17 c0       	rjmp	.+46     	; 0x414 <__DATA_REGION_LENGTH__+0x14>
		else if ((*Humidity < __DHT_Humidity_Min) || (*Humidity > __DHT_Humidity_Max))
     3e6:	20 e0       	ldi	r18, 0x00	; 0
     3e8:	30 e0       	ldi	r19, 0x00	; 0
     3ea:	40 ea       	ldi	r20, 0xA0	; 160
     3ec:	51 e4       	ldi	r21, 0x41	; 65
     3ee:	c5 01       	movw	r24, r10
     3f0:	b4 01       	movw	r22, r8
     3f2:	0e 94 4d 03 	call	0x69a	; 0x69a <__cmpsf2>
     3f6:	88 23       	and	r24, r24
     3f8:	54 f0       	brlt	.+20     	; 0x40e <__DATA_REGION_LENGTH__+0xe>
     3fa:	20 e0       	ldi	r18, 0x00	; 0
     3fc:	30 e0       	ldi	r19, 0x00	; 0
     3fe:	44 eb       	ldi	r20, 0xB4	; 180
     400:	52 e4       	ldi	r21, 0x42	; 66
     402:	c5 01       	movw	r24, r10
     404:	b4 01       	movw	r22, r8
     406:	0e 94 b3 03 	call	0x766	; 0x766 <__gesf2>
     40a:	18 16       	cp	r1, r24
     40c:	1c f4       	brge	.+6      	; 0x414 <__DATA_REGION_LENGTH__+0x14>
			__DHT_STATUS = DHT_Error_Humidity;
     40e:	81 e0       	ldi	r24, 0x01	; 1
     410:	80 93 c8 00 	sts	0x00C8, r24	; 0x8000c8 <__DHT_STATUS>
	}

	return DHT_GetStatus();
     414:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <DHT_GetStatus>
}
     418:	0f 90       	pop	r0
     41a:	0f 90       	pop	r0
     41c:	0f 90       	pop	r0
     41e:	0f 90       	pop	r0
     420:	df 91       	pop	r29
     422:	cf 91       	pop	r28
     424:	1f 91       	pop	r17
     426:	0f 91       	pop	r16
     428:	ff 90       	pop	r15
     42a:	ef 90       	pop	r14
     42c:	df 90       	pop	r13
     42e:	cf 90       	pop	r12
     430:	bf 90       	pop	r11
     432:	af 90       	pop	r10
     434:	9f 90       	pop	r9
     436:	8f 90       	pop	r8
     438:	08 95       	ret

0000043a <lcd_command>:
	//Greeting
	lcd_string_with_delay("    Group 4     EMA3028 20 2024");
	_delay_ms(1000);
	lcd_string_with_delay(" The Incubator");
	_delay_ms(1000);
	lcd_command(0x01);  // Clear display
     43a:	98 2f       	mov	r25, r24
     43c:	90 7f       	andi	r25, 0xF0	; 240
     43e:	98 60       	ori	r25, 0x08	; 8
     440:	95 bb       	out	0x15, r25	; 21
     442:	95 b3       	in	r25, 0x15	; 21
     444:	9b 7f       	andi	r25, 0xFB	; 251
     446:	95 bb       	out	0x15, r25	; 21
     448:	e9 ef       	ldi	r30, 0xF9	; 249
     44a:	f0 e0       	ldi	r31, 0x00	; 0
     44c:	31 97       	sbiw	r30, 0x01	; 1
     44e:	f1 f7       	brne	.-4      	; 0x44c <lcd_command+0x12>
     450:	00 c0       	rjmp	.+0      	; 0x452 <lcd_command+0x18>
     452:	00 00       	nop
     454:	95 b3       	in	r25, 0x15	; 21
     456:	97 7f       	andi	r25, 0xF7	; 247
     458:	95 bb       	out	0x15, r25	; 21
     45a:	e9 ef       	ldi	r30, 0xF9	; 249
     45c:	f0 e0       	ldi	r31, 0x00	; 0
     45e:	31 97       	sbiw	r30, 0x01	; 1
     460:	f1 f7       	brne	.-4      	; 0x45e <lcd_command+0x24>
     462:	00 c0       	rjmp	.+0      	; 0x464 <__stack+0x5>
     464:	00 00       	nop
     466:	f0 e1       	ldi	r31, 0x10	; 16
     468:	8f 9f       	mul	r24, r31
     46a:	c0 01       	movw	r24, r0
     46c:	11 24       	eor	r1, r1
     46e:	88 60       	ori	r24, 0x08	; 8
     470:	85 bb       	out	0x15, r24	; 21
     472:	85 b3       	in	r24, 0x15	; 21
     474:	8b 7f       	andi	r24, 0xFB	; 251
     476:	85 bb       	out	0x15, r24	; 21
     478:	89 ef       	ldi	r24, 0xF9	; 249
     47a:	90 e0       	ldi	r25, 0x00	; 0
     47c:	01 97       	sbiw	r24, 0x01	; 1
     47e:	f1 f7       	brne	.-4      	; 0x47c <__stack+0x1d>
     480:	00 c0       	rjmp	.+0      	; 0x482 <__stack+0x23>
     482:	00 00       	nop
     484:	85 b3       	in	r24, 0x15	; 21
     486:	87 7f       	andi	r24, 0xF7	; 247
     488:	85 bb       	out	0x15, r24	; 21
     48a:	e9 ef       	ldi	r30, 0xF9	; 249
     48c:	f0 e0       	ldi	r31, 0x00	; 0
     48e:	31 97       	sbiw	r30, 0x01	; 1
     490:	f1 f7       	brne	.-4      	; 0x48e <__stack+0x2f>
     492:	00 c0       	rjmp	.+0      	; 0x494 <__stack+0x35>
     494:	00 00       	nop
     496:	08 95       	ret

00000498 <lcd_init>:
     498:	87 e8       	ldi	r24, 0x87	; 135
     49a:	93 e1       	ldi	r25, 0x13	; 19
     49c:	01 97       	sbiw	r24, 0x01	; 1
     49e:	f1 f7       	brne	.-4      	; 0x49c <lcd_init+0x4>
     4a0:	00 c0       	rjmp	.+0      	; 0x4a2 <lcd_init+0xa>
     4a2:	00 00       	nop
     4a4:	82 e0       	ldi	r24, 0x02	; 2
     4a6:	0e 94 1d 02 	call	0x43a	; 0x43a <lcd_command>
     4aa:	88 e2       	ldi	r24, 0x28	; 40
     4ac:	0e 94 1d 02 	call	0x43a	; 0x43a <lcd_command>
     4b0:	8c e0       	ldi	r24, 0x0C	; 12
     4b2:	0e 94 1d 02 	call	0x43a	; 0x43a <lcd_command>
     4b6:	86 e0       	ldi	r24, 0x06	; 6
     4b8:	0e 94 1d 02 	call	0x43a	; 0x43a <lcd_command>
     4bc:	81 e0       	ldi	r24, 0x01	; 1
     4be:	0e 94 1d 02 	call	0x43a	; 0x43a <lcd_command>
     4c2:	80 e8       	ldi	r24, 0x80	; 128
     4c4:	0e 94 1d 02 	call	0x43a	; 0x43a <lcd_command>
     4c8:	08 95       	ret

000004ca <lcd_data>:
     4ca:	98 2f       	mov	r25, r24
     4cc:	90 7f       	andi	r25, 0xF0	; 240
     4ce:	9c 60       	ori	r25, 0x0C	; 12
     4d0:	95 bb       	out	0x15, r25	; 21
     4d2:	e9 ef       	ldi	r30, 0xF9	; 249
     4d4:	f0 e0       	ldi	r31, 0x00	; 0
     4d6:	31 97       	sbiw	r30, 0x01	; 1
     4d8:	f1 f7       	brne	.-4      	; 0x4d6 <lcd_data+0xc>
     4da:	00 c0       	rjmp	.+0      	; 0x4dc <lcd_data+0x12>
     4dc:	00 00       	nop
     4de:	95 b3       	in	r25, 0x15	; 21
     4e0:	97 7f       	andi	r25, 0xF7	; 247
     4e2:	95 bb       	out	0x15, r25	; 21
     4e4:	e9 ef       	ldi	r30, 0xF9	; 249
     4e6:	f0 e0       	ldi	r31, 0x00	; 0
     4e8:	31 97       	sbiw	r30, 0x01	; 1
     4ea:	f1 f7       	brne	.-4      	; 0x4e8 <lcd_data+0x1e>
     4ec:	00 c0       	rjmp	.+0      	; 0x4ee <lcd_data+0x24>
     4ee:	00 00       	nop
     4f0:	f0 e1       	ldi	r31, 0x10	; 16
     4f2:	8f 9f       	mul	r24, r31
     4f4:	c0 01       	movw	r24, r0
     4f6:	11 24       	eor	r1, r1
     4f8:	8c 60       	ori	r24, 0x0C	; 12
     4fa:	85 bb       	out	0x15, r24	; 21
     4fc:	89 ef       	ldi	r24, 0xF9	; 249
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	01 97       	sbiw	r24, 0x01	; 1
     502:	f1 f7       	brne	.-4      	; 0x500 <lcd_data+0x36>
     504:	00 c0       	rjmp	.+0      	; 0x506 <lcd_data+0x3c>
     506:	00 00       	nop
     508:	85 b3       	in	r24, 0x15	; 21
     50a:	87 7f       	andi	r24, 0xF7	; 247
     50c:	85 bb       	out	0x15, r24	; 21
     50e:	e9 ef       	ldi	r30, 0xF9	; 249
     510:	f0 e0       	ldi	r31, 0x00	; 0
     512:	31 97       	sbiw	r30, 0x01	; 1
     514:	f1 f7       	brne	.-4      	; 0x512 <lcd_data+0x48>
     516:	00 c0       	rjmp	.+0      	; 0x518 <lcd_data+0x4e>
     518:	00 00       	nop
     51a:	08 95       	ret

0000051c <lcd_string>:
     51c:	0f 93       	push	r16
     51e:	1f 93       	push	r17
     520:	cf 93       	push	r28
     522:	df 93       	push	r29
     524:	8c 01       	movw	r16, r24
     526:	c0 e0       	ldi	r28, 0x00	; 0
     528:	d0 e0       	ldi	r29, 0x00	; 0
     52a:	03 c0       	rjmp	.+6      	; 0x532 <lcd_string+0x16>
     52c:	0e 94 65 02 	call	0x4ca	; 0x4ca <lcd_data>
     530:	21 96       	adiw	r28, 0x01	; 1
     532:	f8 01       	movw	r30, r16
     534:	ec 0f       	add	r30, r28
     536:	fd 1f       	adc	r31, r29
     538:	80 81       	ld	r24, Z
     53a:	81 11       	cpse	r24, r1
     53c:	f7 cf       	rjmp	.-18     	; 0x52c <lcd_string+0x10>
     53e:	df 91       	pop	r29
     540:	cf 91       	pop	r28
     542:	1f 91       	pop	r17
     544:	0f 91       	pop	r16
     546:	08 95       	ret

00000548 <lcd_float>:
     548:	ef 92       	push	r14
     54a:	ff 92       	push	r15
     54c:	0f 93       	push	r16
     54e:	1f 93       	push	r17
     550:	cf 93       	push	r28
     552:	df 93       	push	r29
     554:	cd b7       	in	r28, 0x3d	; 61
     556:	de b7       	in	r29, 0x3e	; 62
     558:	64 97       	sbiw	r28, 0x14	; 20
     55a:	0f b6       	in	r0, 0x3f	; 63
     55c:	f8 94       	cli
     55e:	de bf       	out	0x3e, r29	; 62
     560:	0f be       	out	0x3f, r0	; 63
     562:	cd bf       	out	0x3d, r28	; 61
     564:	7e 01       	movw	r14, r28
     566:	2b e0       	ldi	r18, 0x0B	; 11
     568:	e2 0e       	add	r14, r18
     56a:	f1 1c       	adc	r15, r1
     56c:	87 01       	movw	r16, r14
     56e:	22 e0       	ldi	r18, 0x02	; 2
     570:	42 e0       	ldi	r20, 0x02	; 2
     572:	0e 94 b8 03 	call	0x770	; 0x770 <dtostrf>
     576:	ff 92       	push	r15
     578:	ef 92       	push	r14
     57a:	80 e6       	ldi	r24, 0x60	; 96
     57c:	90 e0       	ldi	r25, 0x00	; 0
     57e:	9f 93       	push	r25
     580:	8f 93       	push	r24
     582:	1f 92       	push	r1
     584:	8a e0       	ldi	r24, 0x0A	; 10
     586:	8f 93       	push	r24
     588:	0a 50       	subi	r16, 0x0A	; 10
     58a:	11 09       	sbc	r17, r1
     58c:	1f 93       	push	r17
     58e:	0f 93       	push	r16
     590:	0e 94 d8 03 	call	0x7b0	; 0x7b0 <snprintf>
     594:	c8 01       	movw	r24, r16
     596:	0e 94 8e 02 	call	0x51c	; 0x51c <lcd_string>
     59a:	0f b6       	in	r0, 0x3f	; 63
     59c:	f8 94       	cli
     59e:	de bf       	out	0x3e, r29	; 62
     5a0:	0f be       	out	0x3f, r0	; 63
     5a2:	cd bf       	out	0x3d, r28	; 61
     5a4:	64 96       	adiw	r28, 0x14	; 20
     5a6:	0f b6       	in	r0, 0x3f	; 63
     5a8:	f8 94       	cli
     5aa:	de bf       	out	0x3e, r29	; 62
     5ac:	0f be       	out	0x3f, r0	; 63
     5ae:	cd bf       	out	0x3d, r28	; 61
     5b0:	df 91       	pop	r29
     5b2:	cf 91       	pop	r28
     5b4:	1f 91       	pop	r17
     5b6:	0f 91       	pop	r16
     5b8:	ff 90       	pop	r15
     5ba:	ef 90       	pop	r14
     5bc:	08 95       	ret

000005be <lcd_clear>:
     5be:	81 e0       	ldi	r24, 0x01	; 1
     5c0:	0e 94 1d 02 	call	0x43a	; 0x43a <lcd_command>
     5c4:	08 95       	ret

000005c6 <updateDisplay>:
}

void updateDisplay(int temp, int temp_set) {
     5c6:	0f 93       	push	r16
     5c8:	1f 93       	push	r17
     5ca:	cf 93       	push	r28
     5cc:	df 93       	push	r29
     5ce:	8c 01       	movw	r16, r24
     5d0:	eb 01       	movw	r28, r22
	lcd_clear(); // Clear only if necessary
     5d2:	0e 94 df 02 	call	0x5be	; 0x5be <lcd_clear>

	lcd_string("Temp: ");
     5d6:	82 e9       	ldi	r24, 0x92	; 146
     5d8:	90 e0       	ldi	r25, 0x00	; 0
     5da:	0e 94 8e 02 	call	0x51c	; 0x51c <lcd_string>
	lcd_float(temp);
     5de:	b8 01       	movw	r22, r16
     5e0:	11 0f       	add	r17, r17
     5e2:	88 0b       	sbc	r24, r24
     5e4:	99 0b       	sbc	r25, r25
     5e6:	0e 94 54 03 	call	0x6a8	; 0x6a8 <__floatsisf>
     5ea:	0e 94 a4 02 	call	0x548	; 0x548 <lcd_float>
	lcd_command(0xC0); // Move cursor to second line
     5ee:	80 ec       	ldi	r24, 0xC0	; 192
     5f0:	0e 94 1d 02 	call	0x43a	; 0x43a <lcd_command>

	lcd_string("T_set: ");
     5f4:	89 e9       	ldi	r24, 0x99	; 153
     5f6:	90 e0       	ldi	r25, 0x00	; 0
     5f8:	0e 94 8e 02 	call	0x51c	; 0x51c <lcd_string>
	lcd_float(temp_set);
     5fc:	be 01       	movw	r22, r28
     5fe:	dd 0f       	add	r29, r29
     600:	88 0b       	sbc	r24, r24
     602:	99 0b       	sbc	r25, r25
     604:	0e 94 54 03 	call	0x6a8	; 0x6a8 <__floatsisf>
     608:	0e 94 a4 02 	call	0x548	; 0x548 <lcd_float>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     60c:	8f e4       	ldi	r24, 0x4F	; 79
     60e:	93 ec       	ldi	r25, 0xC3	; 195
     610:	01 97       	sbiw	r24, 0x01	; 1
     612:	f1 f7       	brne	.-4      	; 0x610 <updateDisplay+0x4a>
     614:	00 c0       	rjmp	.+0      	; 0x616 <updateDisplay+0x50>
     616:	00 00       	nop
	_delay_ms(200);
}
     618:	df 91       	pop	r29
     61a:	cf 91       	pop	r28
     61c:	1f 91       	pop	r17
     61e:	0f 91       	pop	r16
     620:	08 95       	ret

00000622 <main>:
#include "DHT.h"

#define F_CPU 16000000UL

int main(void)
{
     622:	cf 93       	push	r28
     624:	df 93       	push	r29
     626:	cd b7       	in	r28, 0x3d	; 61
     628:	de b7       	in	r29, 0x3e	; 62
     62a:	28 97       	sbiw	r28, 0x08	; 8
     62c:	0f b6       	in	r0, 0x3f	; 63
     62e:	f8 94       	cli
     630:	de bf       	out	0x3e, r29	; 62
     632:	0f be       	out	0x3f, r0	; 63
     634:	cd bf       	out	0x3d, r28	; 61
	DDRC |= (1 << LCD_RS) | (1 << LCD_E) | (1 << LCD_D4) | (1 << LCD_D5) | (1 << LCD_D6) | (1 << LCD_D7);
     636:	84 b3       	in	r24, 0x14	; 20
     638:	8c 6f       	ori	r24, 0xFC	; 252
     63a:	84 bb       	out	0x14, r24	; 20
	lcd_init();
     63c:	0e 94 4c 02 	call	0x498	; 0x498 <lcd_init>
	//Variables
	double temperature[1];
	double humidity[1];

	//Setup
	DHT_Setup();
     640:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <DHT_Setup>
	
	//Loop
	while (1 == 1)
	{
		//Read from sensor
		DHT_Read(temperature, humidity);
     644:	be 01       	movw	r22, r28
     646:	6b 5f       	subi	r22, 0xFB	; 251
     648:	7f 4f       	sbci	r23, 0xFF	; 255
     64a:	ce 01       	movw	r24, r28
     64c:	01 96       	adiw	r24, 0x01	; 1
     64e:	0e 94 a7 01 	call	0x34e	; 0x34e <DHT_Read>
		
		//Check status
		switch (DHT_GetStatus())
     652:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <DHT_GetStatus>
     656:	83 30       	cpi	r24, 0x03	; 3
     658:	69 f0       	breq	.+26     	; 0x674 <main+0x52>
     65a:	84 30       	cpi	r24, 0x04	; 4
     65c:	81 f0       	breq	.+32     	; 0x67e <main+0x5c>
     65e:	81 11       	cpse	r24, r1
     660:	12 c0       	rjmp	.+36     	; 0x686 <main+0x64>
		{
			case (DHT_Ok):
			//Print temperature
			//print(temperature[0]);
			updateDisplay((int)temperature, temp_set);
     662:	60 91 c6 00 	lds	r22, 0x00C6	; 0x8000c6 <__data_end>
     666:	70 91 c7 00 	lds	r23, 0x00C7	; 0x8000c7 <__data_end+0x1>
     66a:	ce 01       	movw	r24, r28
     66c:	01 96       	adiw	r24, 0x01	; 1
     66e:	0e 94 e3 02 	call	0x5c6	; 0x5c6 <updateDisplay>
			//Print humidity
			//print(humidity[0]);
			break;
     672:	09 c0       	rjmp	.+18     	; 0x686 <main+0x64>
			case (DHT_Error_Checksum):
			//Do something
			lcd_string("DHT_Error_Checksum");
     674:	81 ea       	ldi	r24, 0xA1	; 161
     676:	90 e0       	ldi	r25, 0x00	; 0
     678:	0e 94 8e 02 	call	0x51c	; 0x51c <lcd_string>
			break;
     67c:	04 c0       	rjmp	.+8      	; 0x686 <main+0x64>
			case (DHT_Error_Timeout):
			//Do something else
			lcd_string("DHT_Error_Timeout");
     67e:	84 eb       	ldi	r24, 0xB4	; 180
     680:	90 e0       	ldi	r25, 0x00	; 0
     682:	0e 94 8e 02 	call	0x51c	; 0x51c <lcd_string>
     686:	2f e3       	ldi	r18, 0x3F	; 63
     688:	8d e0       	ldi	r24, 0x0D	; 13
     68a:	93 e0       	ldi	r25, 0x03	; 3
     68c:	21 50       	subi	r18, 0x01	; 1
     68e:	80 40       	sbci	r24, 0x00	; 0
     690:	90 40       	sbci	r25, 0x00	; 0
     692:	e1 f7       	brne	.-8      	; 0x68c <main+0x6a>
     694:	00 c0       	rjmp	.+0      	; 0x696 <main+0x74>
     696:	00 00       	nop
     698:	d5 cf       	rjmp	.-86     	; 0x644 <main+0x22>

0000069a <__cmpsf2>:
     69a:	0e 94 8f 03 	call	0x71e	; 0x71e <__fp_cmp>
     69e:	08 f4       	brcc	.+2      	; 0x6a2 <__cmpsf2+0x8>
     6a0:	81 e0       	ldi	r24, 0x01	; 1
     6a2:	08 95       	ret

000006a4 <__floatunsisf>:
     6a4:	e8 94       	clt
     6a6:	09 c0       	rjmp	.+18     	; 0x6ba <__floatsisf+0x12>

000006a8 <__floatsisf>:
     6a8:	97 fb       	bst	r25, 7
     6aa:	3e f4       	brtc	.+14     	; 0x6ba <__floatsisf+0x12>
     6ac:	90 95       	com	r25
     6ae:	80 95       	com	r24
     6b0:	70 95       	com	r23
     6b2:	61 95       	neg	r22
     6b4:	7f 4f       	sbci	r23, 0xFF	; 255
     6b6:	8f 4f       	sbci	r24, 0xFF	; 255
     6b8:	9f 4f       	sbci	r25, 0xFF	; 255
     6ba:	99 23       	and	r25, r25
     6bc:	a9 f0       	breq	.+42     	; 0x6e8 <__floatsisf+0x40>
     6be:	f9 2f       	mov	r31, r25
     6c0:	96 e9       	ldi	r25, 0x96	; 150
     6c2:	bb 27       	eor	r27, r27
     6c4:	93 95       	inc	r25
     6c6:	f6 95       	lsr	r31
     6c8:	87 95       	ror	r24
     6ca:	77 95       	ror	r23
     6cc:	67 95       	ror	r22
     6ce:	b7 95       	ror	r27
     6d0:	f1 11       	cpse	r31, r1
     6d2:	f8 cf       	rjmp	.-16     	; 0x6c4 <__floatsisf+0x1c>
     6d4:	fa f4       	brpl	.+62     	; 0x714 <__floatsisf+0x6c>
     6d6:	bb 0f       	add	r27, r27
     6d8:	11 f4       	brne	.+4      	; 0x6de <__floatsisf+0x36>
     6da:	60 ff       	sbrs	r22, 0
     6dc:	1b c0       	rjmp	.+54     	; 0x714 <__floatsisf+0x6c>
     6de:	6f 5f       	subi	r22, 0xFF	; 255
     6e0:	7f 4f       	sbci	r23, 0xFF	; 255
     6e2:	8f 4f       	sbci	r24, 0xFF	; 255
     6e4:	9f 4f       	sbci	r25, 0xFF	; 255
     6e6:	16 c0       	rjmp	.+44     	; 0x714 <__floatsisf+0x6c>
     6e8:	88 23       	and	r24, r24
     6ea:	11 f0       	breq	.+4      	; 0x6f0 <__floatsisf+0x48>
     6ec:	96 e9       	ldi	r25, 0x96	; 150
     6ee:	11 c0       	rjmp	.+34     	; 0x712 <__floatsisf+0x6a>
     6f0:	77 23       	and	r23, r23
     6f2:	21 f0       	breq	.+8      	; 0x6fc <__floatsisf+0x54>
     6f4:	9e e8       	ldi	r25, 0x8E	; 142
     6f6:	87 2f       	mov	r24, r23
     6f8:	76 2f       	mov	r23, r22
     6fa:	05 c0       	rjmp	.+10     	; 0x706 <__floatsisf+0x5e>
     6fc:	66 23       	and	r22, r22
     6fe:	71 f0       	breq	.+28     	; 0x71c <__floatsisf+0x74>
     700:	96 e8       	ldi	r25, 0x86	; 134
     702:	86 2f       	mov	r24, r22
     704:	70 e0       	ldi	r23, 0x00	; 0
     706:	60 e0       	ldi	r22, 0x00	; 0
     708:	2a f0       	brmi	.+10     	; 0x714 <__floatsisf+0x6c>
     70a:	9a 95       	dec	r25
     70c:	66 0f       	add	r22, r22
     70e:	77 1f       	adc	r23, r23
     710:	88 1f       	adc	r24, r24
     712:	da f7       	brpl	.-10     	; 0x70a <__floatsisf+0x62>
     714:	88 0f       	add	r24, r24
     716:	96 95       	lsr	r25
     718:	87 95       	ror	r24
     71a:	97 f9       	bld	r25, 7
     71c:	08 95       	ret

0000071e <__fp_cmp>:
     71e:	99 0f       	add	r25, r25
     720:	00 08       	sbc	r0, r0
     722:	55 0f       	add	r21, r21
     724:	aa 0b       	sbc	r26, r26
     726:	e0 e8       	ldi	r30, 0x80	; 128
     728:	fe ef       	ldi	r31, 0xFE	; 254
     72a:	16 16       	cp	r1, r22
     72c:	17 06       	cpc	r1, r23
     72e:	e8 07       	cpc	r30, r24
     730:	f9 07       	cpc	r31, r25
     732:	c0 f0       	brcs	.+48     	; 0x764 <__fp_cmp+0x46>
     734:	12 16       	cp	r1, r18
     736:	13 06       	cpc	r1, r19
     738:	e4 07       	cpc	r30, r20
     73a:	f5 07       	cpc	r31, r21
     73c:	98 f0       	brcs	.+38     	; 0x764 <__fp_cmp+0x46>
     73e:	62 1b       	sub	r22, r18
     740:	73 0b       	sbc	r23, r19
     742:	84 0b       	sbc	r24, r20
     744:	95 0b       	sbc	r25, r21
     746:	39 f4       	brne	.+14     	; 0x756 <__fp_cmp+0x38>
     748:	0a 26       	eor	r0, r26
     74a:	61 f0       	breq	.+24     	; 0x764 <__fp_cmp+0x46>
     74c:	23 2b       	or	r18, r19
     74e:	24 2b       	or	r18, r20
     750:	25 2b       	or	r18, r21
     752:	21 f4       	brne	.+8      	; 0x75c <__fp_cmp+0x3e>
     754:	08 95       	ret
     756:	0a 26       	eor	r0, r26
     758:	09 f4       	brne	.+2      	; 0x75c <__fp_cmp+0x3e>
     75a:	a1 40       	sbci	r26, 0x01	; 1
     75c:	a6 95       	lsr	r26
     75e:	8f ef       	ldi	r24, 0xFF	; 255
     760:	81 1d       	adc	r24, r1
     762:	81 1d       	adc	r24, r1
     764:	08 95       	ret

00000766 <__gesf2>:
     766:	0e 94 8f 03 	call	0x71e	; 0x71e <__fp_cmp>
     76a:	08 f4       	brcc	.+2      	; 0x76e <__gesf2+0x8>
     76c:	8f ef       	ldi	r24, 0xFF	; 255
     76e:	08 95       	ret

00000770 <dtostrf>:
     770:	ef 92       	push	r14
     772:	0f 93       	push	r16
     774:	1f 93       	push	r17
     776:	cf 93       	push	r28
     778:	df 93       	push	r29
     77a:	e8 01       	movw	r28, r16
     77c:	47 fd       	sbrc	r20, 7
     77e:	02 c0       	rjmp	.+4      	; 0x784 <dtostrf+0x14>
     780:	34 e0       	ldi	r19, 0x04	; 4
     782:	01 c0       	rjmp	.+2      	; 0x786 <dtostrf+0x16>
     784:	34 e1       	ldi	r19, 0x14	; 20
     786:	04 2e       	mov	r0, r20
     788:	00 0c       	add	r0, r0
     78a:	55 0b       	sbc	r21, r21
     78c:	57 ff       	sbrs	r21, 7
     78e:	03 c0       	rjmp	.+6      	; 0x796 <dtostrf+0x26>
     790:	51 95       	neg	r21
     792:	41 95       	neg	r20
     794:	51 09       	sbc	r21, r1
     796:	e3 2e       	mov	r14, r19
     798:	02 2f       	mov	r16, r18
     79a:	24 2f       	mov	r18, r20
     79c:	ae 01       	movw	r20, r28
     79e:	0e 94 e9 05 	call	0xbd2	; 0xbd2 <dtoa_prf>
     7a2:	ce 01       	movw	r24, r28
     7a4:	df 91       	pop	r29
     7a6:	cf 91       	pop	r28
     7a8:	1f 91       	pop	r17
     7aa:	0f 91       	pop	r16
     7ac:	ef 90       	pop	r14
     7ae:	08 95       	ret

000007b0 <snprintf>:
     7b0:	ae e0       	ldi	r26, 0x0E	; 14
     7b2:	b0 e0       	ldi	r27, 0x00	; 0
     7b4:	ee ed       	ldi	r30, 0xDE	; 222
     7b6:	f3 e0       	ldi	r31, 0x03	; 3
     7b8:	0c 94 d9 08 	jmp	0x11b2	; 0x11b2 <__prologue_saves__+0x1c>
     7bc:	0d 89       	ldd	r16, Y+21	; 0x15
     7be:	1e 89       	ldd	r17, Y+22	; 0x16
     7c0:	8f 89       	ldd	r24, Y+23	; 0x17
     7c2:	98 8d       	ldd	r25, Y+24	; 0x18
     7c4:	26 e0       	ldi	r18, 0x06	; 6
     7c6:	2c 83       	std	Y+4, r18	; 0x04
     7c8:	1a 83       	std	Y+2, r17	; 0x02
     7ca:	09 83       	std	Y+1, r16	; 0x01
     7cc:	97 ff       	sbrs	r25, 7
     7ce:	02 c0       	rjmp	.+4      	; 0x7d4 <snprintf+0x24>
     7d0:	80 e0       	ldi	r24, 0x00	; 0
     7d2:	90 e8       	ldi	r25, 0x80	; 128
     7d4:	01 97       	sbiw	r24, 0x01	; 1
     7d6:	9e 83       	std	Y+6, r25	; 0x06
     7d8:	8d 83       	std	Y+5, r24	; 0x05
     7da:	ae 01       	movw	r20, r28
     7dc:	45 5e       	subi	r20, 0xE5	; 229
     7de:	5f 4f       	sbci	r21, 0xFF	; 255
     7e0:	69 8d       	ldd	r22, Y+25	; 0x19
     7e2:	7a 8d       	ldd	r23, Y+26	; 0x1a
     7e4:	ce 01       	movw	r24, r28
     7e6:	01 96       	adiw	r24, 0x01	; 1
     7e8:	0e 94 08 04 	call	0x810	; 0x810 <vfprintf>
     7ec:	4d 81       	ldd	r20, Y+5	; 0x05
     7ee:	5e 81       	ldd	r21, Y+6	; 0x06
     7f0:	57 fd       	sbrc	r21, 7
     7f2:	0a c0       	rjmp	.+20     	; 0x808 <snprintf+0x58>
     7f4:	2f 81       	ldd	r18, Y+7	; 0x07
     7f6:	38 85       	ldd	r19, Y+8	; 0x08
     7f8:	42 17       	cp	r20, r18
     7fa:	53 07       	cpc	r21, r19
     7fc:	0c f4       	brge	.+2      	; 0x800 <snprintf+0x50>
     7fe:	9a 01       	movw	r18, r20
     800:	f8 01       	movw	r30, r16
     802:	e2 0f       	add	r30, r18
     804:	f3 1f       	adc	r31, r19
     806:	10 82       	st	Z, r1
     808:	2e 96       	adiw	r28, 0x0e	; 14
     80a:	e4 e0       	ldi	r30, 0x04	; 4
     80c:	0c 94 f5 08 	jmp	0x11ea	; 0x11ea <__epilogue_restores__+0x1c>

00000810 <vfprintf>:
     810:	ab e0       	ldi	r26, 0x0B	; 11
     812:	b0 e0       	ldi	r27, 0x00	; 0
     814:	ee e0       	ldi	r30, 0x0E	; 14
     816:	f4 e0       	ldi	r31, 0x04	; 4
     818:	0c 94 cb 08 	jmp	0x1196	; 0x1196 <__prologue_saves__>
     81c:	6c 01       	movw	r12, r24
     81e:	7b 01       	movw	r14, r22
     820:	8a 01       	movw	r16, r20
     822:	fc 01       	movw	r30, r24
     824:	17 82       	std	Z+7, r1	; 0x07
     826:	16 82       	std	Z+6, r1	; 0x06
     828:	83 81       	ldd	r24, Z+3	; 0x03
     82a:	81 ff       	sbrs	r24, 1
     82c:	cc c1       	rjmp	.+920    	; 0xbc6 <vfprintf+0x3b6>
     82e:	ce 01       	movw	r24, r28
     830:	01 96       	adiw	r24, 0x01	; 1
     832:	3c 01       	movw	r6, r24
     834:	f6 01       	movw	r30, r12
     836:	93 81       	ldd	r25, Z+3	; 0x03
     838:	f7 01       	movw	r30, r14
     83a:	93 fd       	sbrc	r25, 3
     83c:	85 91       	lpm	r24, Z+
     83e:	93 ff       	sbrs	r25, 3
     840:	81 91       	ld	r24, Z+
     842:	7f 01       	movw	r14, r30
     844:	88 23       	and	r24, r24
     846:	09 f4       	brne	.+2      	; 0x84a <vfprintf+0x3a>
     848:	ba c1       	rjmp	.+884    	; 0xbbe <vfprintf+0x3ae>
     84a:	85 32       	cpi	r24, 0x25	; 37
     84c:	39 f4       	brne	.+14     	; 0x85c <vfprintf+0x4c>
     84e:	93 fd       	sbrc	r25, 3
     850:	85 91       	lpm	r24, Z+
     852:	93 ff       	sbrs	r25, 3
     854:	81 91       	ld	r24, Z+
     856:	7f 01       	movw	r14, r30
     858:	85 32       	cpi	r24, 0x25	; 37
     85a:	29 f4       	brne	.+10     	; 0x866 <vfprintf+0x56>
     85c:	b6 01       	movw	r22, r12
     85e:	90 e0       	ldi	r25, 0x00	; 0
     860:	0e 94 31 08 	call	0x1062	; 0x1062 <fputc>
     864:	e7 cf       	rjmp	.-50     	; 0x834 <vfprintf+0x24>
     866:	91 2c       	mov	r9, r1
     868:	21 2c       	mov	r2, r1
     86a:	31 2c       	mov	r3, r1
     86c:	ff e1       	ldi	r31, 0x1F	; 31
     86e:	f3 15       	cp	r31, r3
     870:	d8 f0       	brcs	.+54     	; 0x8a8 <vfprintf+0x98>
     872:	8b 32       	cpi	r24, 0x2B	; 43
     874:	79 f0       	breq	.+30     	; 0x894 <vfprintf+0x84>
     876:	38 f4       	brcc	.+14     	; 0x886 <vfprintf+0x76>
     878:	80 32       	cpi	r24, 0x20	; 32
     87a:	79 f0       	breq	.+30     	; 0x89a <vfprintf+0x8a>
     87c:	83 32       	cpi	r24, 0x23	; 35
     87e:	a1 f4       	brne	.+40     	; 0x8a8 <vfprintf+0x98>
     880:	23 2d       	mov	r18, r3
     882:	20 61       	ori	r18, 0x10	; 16
     884:	1d c0       	rjmp	.+58     	; 0x8c0 <vfprintf+0xb0>
     886:	8d 32       	cpi	r24, 0x2D	; 45
     888:	61 f0       	breq	.+24     	; 0x8a2 <vfprintf+0x92>
     88a:	80 33       	cpi	r24, 0x30	; 48
     88c:	69 f4       	brne	.+26     	; 0x8a8 <vfprintf+0x98>
     88e:	23 2d       	mov	r18, r3
     890:	21 60       	ori	r18, 0x01	; 1
     892:	16 c0       	rjmp	.+44     	; 0x8c0 <vfprintf+0xb0>
     894:	83 2d       	mov	r24, r3
     896:	82 60       	ori	r24, 0x02	; 2
     898:	38 2e       	mov	r3, r24
     89a:	e3 2d       	mov	r30, r3
     89c:	e4 60       	ori	r30, 0x04	; 4
     89e:	3e 2e       	mov	r3, r30
     8a0:	2a c0       	rjmp	.+84     	; 0x8f6 <vfprintf+0xe6>
     8a2:	f3 2d       	mov	r31, r3
     8a4:	f8 60       	ori	r31, 0x08	; 8
     8a6:	1d c0       	rjmp	.+58     	; 0x8e2 <vfprintf+0xd2>
     8a8:	37 fc       	sbrc	r3, 7
     8aa:	2d c0       	rjmp	.+90     	; 0x906 <vfprintf+0xf6>
     8ac:	20 ed       	ldi	r18, 0xD0	; 208
     8ae:	28 0f       	add	r18, r24
     8b0:	2a 30       	cpi	r18, 0x0A	; 10
     8b2:	40 f0       	brcs	.+16     	; 0x8c4 <vfprintf+0xb4>
     8b4:	8e 32       	cpi	r24, 0x2E	; 46
     8b6:	b9 f4       	brne	.+46     	; 0x8e6 <vfprintf+0xd6>
     8b8:	36 fc       	sbrc	r3, 6
     8ba:	81 c1       	rjmp	.+770    	; 0xbbe <vfprintf+0x3ae>
     8bc:	23 2d       	mov	r18, r3
     8be:	20 64       	ori	r18, 0x40	; 64
     8c0:	32 2e       	mov	r3, r18
     8c2:	19 c0       	rjmp	.+50     	; 0x8f6 <vfprintf+0xe6>
     8c4:	36 fe       	sbrs	r3, 6
     8c6:	06 c0       	rjmp	.+12     	; 0x8d4 <vfprintf+0xc4>
     8c8:	8a e0       	ldi	r24, 0x0A	; 10
     8ca:	98 9e       	mul	r9, r24
     8cc:	20 0d       	add	r18, r0
     8ce:	11 24       	eor	r1, r1
     8d0:	92 2e       	mov	r9, r18
     8d2:	11 c0       	rjmp	.+34     	; 0x8f6 <vfprintf+0xe6>
     8d4:	ea e0       	ldi	r30, 0x0A	; 10
     8d6:	2e 9e       	mul	r2, r30
     8d8:	20 0d       	add	r18, r0
     8da:	11 24       	eor	r1, r1
     8dc:	22 2e       	mov	r2, r18
     8de:	f3 2d       	mov	r31, r3
     8e0:	f0 62       	ori	r31, 0x20	; 32
     8e2:	3f 2e       	mov	r3, r31
     8e4:	08 c0       	rjmp	.+16     	; 0x8f6 <vfprintf+0xe6>
     8e6:	8c 36       	cpi	r24, 0x6C	; 108
     8e8:	21 f4       	brne	.+8      	; 0x8f2 <vfprintf+0xe2>
     8ea:	83 2d       	mov	r24, r3
     8ec:	80 68       	ori	r24, 0x80	; 128
     8ee:	38 2e       	mov	r3, r24
     8f0:	02 c0       	rjmp	.+4      	; 0x8f6 <vfprintf+0xe6>
     8f2:	88 36       	cpi	r24, 0x68	; 104
     8f4:	41 f4       	brne	.+16     	; 0x906 <vfprintf+0xf6>
     8f6:	f7 01       	movw	r30, r14
     8f8:	93 fd       	sbrc	r25, 3
     8fa:	85 91       	lpm	r24, Z+
     8fc:	93 ff       	sbrs	r25, 3
     8fe:	81 91       	ld	r24, Z+
     900:	7f 01       	movw	r14, r30
     902:	81 11       	cpse	r24, r1
     904:	b3 cf       	rjmp	.-154    	; 0x86c <vfprintf+0x5c>
     906:	98 2f       	mov	r25, r24
     908:	9f 7d       	andi	r25, 0xDF	; 223
     90a:	95 54       	subi	r25, 0x45	; 69
     90c:	93 30       	cpi	r25, 0x03	; 3
     90e:	28 f4       	brcc	.+10     	; 0x91a <vfprintf+0x10a>
     910:	0c 5f       	subi	r16, 0xFC	; 252
     912:	1f 4f       	sbci	r17, 0xFF	; 255
     914:	9f e3       	ldi	r25, 0x3F	; 63
     916:	99 83       	std	Y+1, r25	; 0x01
     918:	0d c0       	rjmp	.+26     	; 0x934 <vfprintf+0x124>
     91a:	83 36       	cpi	r24, 0x63	; 99
     91c:	31 f0       	breq	.+12     	; 0x92a <vfprintf+0x11a>
     91e:	83 37       	cpi	r24, 0x73	; 115
     920:	71 f0       	breq	.+28     	; 0x93e <vfprintf+0x12e>
     922:	83 35       	cpi	r24, 0x53	; 83
     924:	09 f0       	breq	.+2      	; 0x928 <vfprintf+0x118>
     926:	59 c0       	rjmp	.+178    	; 0x9da <vfprintf+0x1ca>
     928:	21 c0       	rjmp	.+66     	; 0x96c <vfprintf+0x15c>
     92a:	f8 01       	movw	r30, r16
     92c:	80 81       	ld	r24, Z
     92e:	89 83       	std	Y+1, r24	; 0x01
     930:	0e 5f       	subi	r16, 0xFE	; 254
     932:	1f 4f       	sbci	r17, 0xFF	; 255
     934:	88 24       	eor	r8, r8
     936:	83 94       	inc	r8
     938:	91 2c       	mov	r9, r1
     93a:	53 01       	movw	r10, r6
     93c:	13 c0       	rjmp	.+38     	; 0x964 <vfprintf+0x154>
     93e:	28 01       	movw	r4, r16
     940:	f2 e0       	ldi	r31, 0x02	; 2
     942:	4f 0e       	add	r4, r31
     944:	51 1c       	adc	r5, r1
     946:	f8 01       	movw	r30, r16
     948:	a0 80       	ld	r10, Z
     94a:	b1 80       	ldd	r11, Z+1	; 0x01
     94c:	36 fe       	sbrs	r3, 6
     94e:	03 c0       	rjmp	.+6      	; 0x956 <vfprintf+0x146>
     950:	69 2d       	mov	r22, r9
     952:	70 e0       	ldi	r23, 0x00	; 0
     954:	02 c0       	rjmp	.+4      	; 0x95a <vfprintf+0x14a>
     956:	6f ef       	ldi	r22, 0xFF	; 255
     958:	7f ef       	ldi	r23, 0xFF	; 255
     95a:	c5 01       	movw	r24, r10
     95c:	0e 94 26 08 	call	0x104c	; 0x104c <strnlen>
     960:	4c 01       	movw	r8, r24
     962:	82 01       	movw	r16, r4
     964:	f3 2d       	mov	r31, r3
     966:	ff 77       	andi	r31, 0x7F	; 127
     968:	3f 2e       	mov	r3, r31
     96a:	16 c0       	rjmp	.+44     	; 0x998 <vfprintf+0x188>
     96c:	28 01       	movw	r4, r16
     96e:	22 e0       	ldi	r18, 0x02	; 2
     970:	42 0e       	add	r4, r18
     972:	51 1c       	adc	r5, r1
     974:	f8 01       	movw	r30, r16
     976:	a0 80       	ld	r10, Z
     978:	b1 80       	ldd	r11, Z+1	; 0x01
     97a:	36 fe       	sbrs	r3, 6
     97c:	03 c0       	rjmp	.+6      	; 0x984 <vfprintf+0x174>
     97e:	69 2d       	mov	r22, r9
     980:	70 e0       	ldi	r23, 0x00	; 0
     982:	02 c0       	rjmp	.+4      	; 0x988 <vfprintf+0x178>
     984:	6f ef       	ldi	r22, 0xFF	; 255
     986:	7f ef       	ldi	r23, 0xFF	; 255
     988:	c5 01       	movw	r24, r10
     98a:	0e 94 1b 08 	call	0x1036	; 0x1036 <strnlen_P>
     98e:	4c 01       	movw	r8, r24
     990:	f3 2d       	mov	r31, r3
     992:	f0 68       	ori	r31, 0x80	; 128
     994:	3f 2e       	mov	r3, r31
     996:	82 01       	movw	r16, r4
     998:	33 fc       	sbrc	r3, 3
     99a:	1b c0       	rjmp	.+54     	; 0x9d2 <vfprintf+0x1c2>
     99c:	82 2d       	mov	r24, r2
     99e:	90 e0       	ldi	r25, 0x00	; 0
     9a0:	88 16       	cp	r8, r24
     9a2:	99 06       	cpc	r9, r25
     9a4:	b0 f4       	brcc	.+44     	; 0x9d2 <vfprintf+0x1c2>
     9a6:	b6 01       	movw	r22, r12
     9a8:	80 e2       	ldi	r24, 0x20	; 32
     9aa:	90 e0       	ldi	r25, 0x00	; 0
     9ac:	0e 94 31 08 	call	0x1062	; 0x1062 <fputc>
     9b0:	2a 94       	dec	r2
     9b2:	f4 cf       	rjmp	.-24     	; 0x99c <vfprintf+0x18c>
     9b4:	f5 01       	movw	r30, r10
     9b6:	37 fc       	sbrc	r3, 7
     9b8:	85 91       	lpm	r24, Z+
     9ba:	37 fe       	sbrs	r3, 7
     9bc:	81 91       	ld	r24, Z+
     9be:	5f 01       	movw	r10, r30
     9c0:	b6 01       	movw	r22, r12
     9c2:	90 e0       	ldi	r25, 0x00	; 0
     9c4:	0e 94 31 08 	call	0x1062	; 0x1062 <fputc>
     9c8:	21 10       	cpse	r2, r1
     9ca:	2a 94       	dec	r2
     9cc:	21 e0       	ldi	r18, 0x01	; 1
     9ce:	82 1a       	sub	r8, r18
     9d0:	91 08       	sbc	r9, r1
     9d2:	81 14       	cp	r8, r1
     9d4:	91 04       	cpc	r9, r1
     9d6:	71 f7       	brne	.-36     	; 0x9b4 <vfprintf+0x1a4>
     9d8:	e8 c0       	rjmp	.+464    	; 0xbaa <vfprintf+0x39a>
     9da:	84 36       	cpi	r24, 0x64	; 100
     9dc:	11 f0       	breq	.+4      	; 0x9e2 <vfprintf+0x1d2>
     9de:	89 36       	cpi	r24, 0x69	; 105
     9e0:	41 f5       	brne	.+80     	; 0xa32 <vfprintf+0x222>
     9e2:	f8 01       	movw	r30, r16
     9e4:	37 fe       	sbrs	r3, 7
     9e6:	07 c0       	rjmp	.+14     	; 0x9f6 <vfprintf+0x1e6>
     9e8:	60 81       	ld	r22, Z
     9ea:	71 81       	ldd	r23, Z+1	; 0x01
     9ec:	82 81       	ldd	r24, Z+2	; 0x02
     9ee:	93 81       	ldd	r25, Z+3	; 0x03
     9f0:	0c 5f       	subi	r16, 0xFC	; 252
     9f2:	1f 4f       	sbci	r17, 0xFF	; 255
     9f4:	08 c0       	rjmp	.+16     	; 0xa06 <vfprintf+0x1f6>
     9f6:	60 81       	ld	r22, Z
     9f8:	71 81       	ldd	r23, Z+1	; 0x01
     9fa:	07 2e       	mov	r0, r23
     9fc:	00 0c       	add	r0, r0
     9fe:	88 0b       	sbc	r24, r24
     a00:	99 0b       	sbc	r25, r25
     a02:	0e 5f       	subi	r16, 0xFE	; 254
     a04:	1f 4f       	sbci	r17, 0xFF	; 255
     a06:	f3 2d       	mov	r31, r3
     a08:	ff 76       	andi	r31, 0x6F	; 111
     a0a:	3f 2e       	mov	r3, r31
     a0c:	97 ff       	sbrs	r25, 7
     a0e:	09 c0       	rjmp	.+18     	; 0xa22 <vfprintf+0x212>
     a10:	90 95       	com	r25
     a12:	80 95       	com	r24
     a14:	70 95       	com	r23
     a16:	61 95       	neg	r22
     a18:	7f 4f       	sbci	r23, 0xFF	; 255
     a1a:	8f 4f       	sbci	r24, 0xFF	; 255
     a1c:	9f 4f       	sbci	r25, 0xFF	; 255
     a1e:	f0 68       	ori	r31, 0x80	; 128
     a20:	3f 2e       	mov	r3, r31
     a22:	2a e0       	ldi	r18, 0x0A	; 10
     a24:	30 e0       	ldi	r19, 0x00	; 0
     a26:	a3 01       	movw	r20, r6
     a28:	0e 94 6d 08 	call	0x10da	; 0x10da <__ultoa_invert>
     a2c:	88 2e       	mov	r8, r24
     a2e:	86 18       	sub	r8, r6
     a30:	45 c0       	rjmp	.+138    	; 0xabc <vfprintf+0x2ac>
     a32:	85 37       	cpi	r24, 0x75	; 117
     a34:	31 f4       	brne	.+12     	; 0xa42 <vfprintf+0x232>
     a36:	23 2d       	mov	r18, r3
     a38:	2f 7e       	andi	r18, 0xEF	; 239
     a3a:	b2 2e       	mov	r11, r18
     a3c:	2a e0       	ldi	r18, 0x0A	; 10
     a3e:	30 e0       	ldi	r19, 0x00	; 0
     a40:	25 c0       	rjmp	.+74     	; 0xa8c <vfprintf+0x27c>
     a42:	93 2d       	mov	r25, r3
     a44:	99 7f       	andi	r25, 0xF9	; 249
     a46:	b9 2e       	mov	r11, r25
     a48:	8f 36       	cpi	r24, 0x6F	; 111
     a4a:	c1 f0       	breq	.+48     	; 0xa7c <vfprintf+0x26c>
     a4c:	18 f4       	brcc	.+6      	; 0xa54 <vfprintf+0x244>
     a4e:	88 35       	cpi	r24, 0x58	; 88
     a50:	79 f0       	breq	.+30     	; 0xa70 <vfprintf+0x260>
     a52:	b5 c0       	rjmp	.+362    	; 0xbbe <vfprintf+0x3ae>
     a54:	80 37       	cpi	r24, 0x70	; 112
     a56:	19 f0       	breq	.+6      	; 0xa5e <vfprintf+0x24e>
     a58:	88 37       	cpi	r24, 0x78	; 120
     a5a:	21 f0       	breq	.+8      	; 0xa64 <vfprintf+0x254>
     a5c:	b0 c0       	rjmp	.+352    	; 0xbbe <vfprintf+0x3ae>
     a5e:	e9 2f       	mov	r30, r25
     a60:	e0 61       	ori	r30, 0x10	; 16
     a62:	be 2e       	mov	r11, r30
     a64:	b4 fe       	sbrs	r11, 4
     a66:	0d c0       	rjmp	.+26     	; 0xa82 <vfprintf+0x272>
     a68:	fb 2d       	mov	r31, r11
     a6a:	f4 60       	ori	r31, 0x04	; 4
     a6c:	bf 2e       	mov	r11, r31
     a6e:	09 c0       	rjmp	.+18     	; 0xa82 <vfprintf+0x272>
     a70:	34 fe       	sbrs	r3, 4
     a72:	0a c0       	rjmp	.+20     	; 0xa88 <vfprintf+0x278>
     a74:	29 2f       	mov	r18, r25
     a76:	26 60       	ori	r18, 0x06	; 6
     a78:	b2 2e       	mov	r11, r18
     a7a:	06 c0       	rjmp	.+12     	; 0xa88 <vfprintf+0x278>
     a7c:	28 e0       	ldi	r18, 0x08	; 8
     a7e:	30 e0       	ldi	r19, 0x00	; 0
     a80:	05 c0       	rjmp	.+10     	; 0xa8c <vfprintf+0x27c>
     a82:	20 e1       	ldi	r18, 0x10	; 16
     a84:	30 e0       	ldi	r19, 0x00	; 0
     a86:	02 c0       	rjmp	.+4      	; 0xa8c <vfprintf+0x27c>
     a88:	20 e1       	ldi	r18, 0x10	; 16
     a8a:	32 e0       	ldi	r19, 0x02	; 2
     a8c:	f8 01       	movw	r30, r16
     a8e:	b7 fe       	sbrs	r11, 7
     a90:	07 c0       	rjmp	.+14     	; 0xaa0 <vfprintf+0x290>
     a92:	60 81       	ld	r22, Z
     a94:	71 81       	ldd	r23, Z+1	; 0x01
     a96:	82 81       	ldd	r24, Z+2	; 0x02
     a98:	93 81       	ldd	r25, Z+3	; 0x03
     a9a:	0c 5f       	subi	r16, 0xFC	; 252
     a9c:	1f 4f       	sbci	r17, 0xFF	; 255
     a9e:	06 c0       	rjmp	.+12     	; 0xaac <vfprintf+0x29c>
     aa0:	60 81       	ld	r22, Z
     aa2:	71 81       	ldd	r23, Z+1	; 0x01
     aa4:	80 e0       	ldi	r24, 0x00	; 0
     aa6:	90 e0       	ldi	r25, 0x00	; 0
     aa8:	0e 5f       	subi	r16, 0xFE	; 254
     aaa:	1f 4f       	sbci	r17, 0xFF	; 255
     aac:	a3 01       	movw	r20, r6
     aae:	0e 94 6d 08 	call	0x10da	; 0x10da <__ultoa_invert>
     ab2:	88 2e       	mov	r8, r24
     ab4:	86 18       	sub	r8, r6
     ab6:	fb 2d       	mov	r31, r11
     ab8:	ff 77       	andi	r31, 0x7F	; 127
     aba:	3f 2e       	mov	r3, r31
     abc:	36 fe       	sbrs	r3, 6
     abe:	0d c0       	rjmp	.+26     	; 0xada <vfprintf+0x2ca>
     ac0:	23 2d       	mov	r18, r3
     ac2:	2e 7f       	andi	r18, 0xFE	; 254
     ac4:	a2 2e       	mov	r10, r18
     ac6:	89 14       	cp	r8, r9
     ac8:	58 f4       	brcc	.+22     	; 0xae0 <vfprintf+0x2d0>
     aca:	34 fe       	sbrs	r3, 4
     acc:	0b c0       	rjmp	.+22     	; 0xae4 <vfprintf+0x2d4>
     ace:	32 fc       	sbrc	r3, 2
     ad0:	09 c0       	rjmp	.+18     	; 0xae4 <vfprintf+0x2d4>
     ad2:	83 2d       	mov	r24, r3
     ad4:	8e 7e       	andi	r24, 0xEE	; 238
     ad6:	a8 2e       	mov	r10, r24
     ad8:	05 c0       	rjmp	.+10     	; 0xae4 <vfprintf+0x2d4>
     ada:	b8 2c       	mov	r11, r8
     adc:	a3 2c       	mov	r10, r3
     ade:	03 c0       	rjmp	.+6      	; 0xae6 <vfprintf+0x2d6>
     ae0:	b8 2c       	mov	r11, r8
     ae2:	01 c0       	rjmp	.+2      	; 0xae6 <vfprintf+0x2d6>
     ae4:	b9 2c       	mov	r11, r9
     ae6:	a4 fe       	sbrs	r10, 4
     ae8:	0f c0       	rjmp	.+30     	; 0xb08 <vfprintf+0x2f8>
     aea:	fe 01       	movw	r30, r28
     aec:	e8 0d       	add	r30, r8
     aee:	f1 1d       	adc	r31, r1
     af0:	80 81       	ld	r24, Z
     af2:	80 33       	cpi	r24, 0x30	; 48
     af4:	21 f4       	brne	.+8      	; 0xafe <vfprintf+0x2ee>
     af6:	9a 2d       	mov	r25, r10
     af8:	99 7e       	andi	r25, 0xE9	; 233
     afa:	a9 2e       	mov	r10, r25
     afc:	09 c0       	rjmp	.+18     	; 0xb10 <vfprintf+0x300>
     afe:	a2 fe       	sbrs	r10, 2
     b00:	06 c0       	rjmp	.+12     	; 0xb0e <vfprintf+0x2fe>
     b02:	b3 94       	inc	r11
     b04:	b3 94       	inc	r11
     b06:	04 c0       	rjmp	.+8      	; 0xb10 <vfprintf+0x300>
     b08:	8a 2d       	mov	r24, r10
     b0a:	86 78       	andi	r24, 0x86	; 134
     b0c:	09 f0       	breq	.+2      	; 0xb10 <vfprintf+0x300>
     b0e:	b3 94       	inc	r11
     b10:	a3 fc       	sbrc	r10, 3
     b12:	11 c0       	rjmp	.+34     	; 0xb36 <vfprintf+0x326>
     b14:	a0 fe       	sbrs	r10, 0
     b16:	06 c0       	rjmp	.+12     	; 0xb24 <vfprintf+0x314>
     b18:	b2 14       	cp	r11, r2
     b1a:	88 f4       	brcc	.+34     	; 0xb3e <vfprintf+0x32e>
     b1c:	28 0c       	add	r2, r8
     b1e:	92 2c       	mov	r9, r2
     b20:	9b 18       	sub	r9, r11
     b22:	0e c0       	rjmp	.+28     	; 0xb40 <vfprintf+0x330>
     b24:	b2 14       	cp	r11, r2
     b26:	60 f4       	brcc	.+24     	; 0xb40 <vfprintf+0x330>
     b28:	b6 01       	movw	r22, r12
     b2a:	80 e2       	ldi	r24, 0x20	; 32
     b2c:	90 e0       	ldi	r25, 0x00	; 0
     b2e:	0e 94 31 08 	call	0x1062	; 0x1062 <fputc>
     b32:	b3 94       	inc	r11
     b34:	f7 cf       	rjmp	.-18     	; 0xb24 <vfprintf+0x314>
     b36:	b2 14       	cp	r11, r2
     b38:	18 f4       	brcc	.+6      	; 0xb40 <vfprintf+0x330>
     b3a:	2b 18       	sub	r2, r11
     b3c:	02 c0       	rjmp	.+4      	; 0xb42 <vfprintf+0x332>
     b3e:	98 2c       	mov	r9, r8
     b40:	21 2c       	mov	r2, r1
     b42:	a4 fe       	sbrs	r10, 4
     b44:	10 c0       	rjmp	.+32     	; 0xb66 <vfprintf+0x356>
     b46:	b6 01       	movw	r22, r12
     b48:	80 e3       	ldi	r24, 0x30	; 48
     b4a:	90 e0       	ldi	r25, 0x00	; 0
     b4c:	0e 94 31 08 	call	0x1062	; 0x1062 <fputc>
     b50:	a2 fe       	sbrs	r10, 2
     b52:	17 c0       	rjmp	.+46     	; 0xb82 <vfprintf+0x372>
     b54:	a1 fc       	sbrc	r10, 1
     b56:	03 c0       	rjmp	.+6      	; 0xb5e <vfprintf+0x34e>
     b58:	88 e7       	ldi	r24, 0x78	; 120
     b5a:	90 e0       	ldi	r25, 0x00	; 0
     b5c:	02 c0       	rjmp	.+4      	; 0xb62 <vfprintf+0x352>
     b5e:	88 e5       	ldi	r24, 0x58	; 88
     b60:	90 e0       	ldi	r25, 0x00	; 0
     b62:	b6 01       	movw	r22, r12
     b64:	0c c0       	rjmp	.+24     	; 0xb7e <vfprintf+0x36e>
     b66:	8a 2d       	mov	r24, r10
     b68:	86 78       	andi	r24, 0x86	; 134
     b6a:	59 f0       	breq	.+22     	; 0xb82 <vfprintf+0x372>
     b6c:	a1 fe       	sbrs	r10, 1
     b6e:	02 c0       	rjmp	.+4      	; 0xb74 <vfprintf+0x364>
     b70:	8b e2       	ldi	r24, 0x2B	; 43
     b72:	01 c0       	rjmp	.+2      	; 0xb76 <vfprintf+0x366>
     b74:	80 e2       	ldi	r24, 0x20	; 32
     b76:	a7 fc       	sbrc	r10, 7
     b78:	8d e2       	ldi	r24, 0x2D	; 45
     b7a:	b6 01       	movw	r22, r12
     b7c:	90 e0       	ldi	r25, 0x00	; 0
     b7e:	0e 94 31 08 	call	0x1062	; 0x1062 <fputc>
     b82:	89 14       	cp	r8, r9
     b84:	38 f4       	brcc	.+14     	; 0xb94 <vfprintf+0x384>
     b86:	b6 01       	movw	r22, r12
     b88:	80 e3       	ldi	r24, 0x30	; 48
     b8a:	90 e0       	ldi	r25, 0x00	; 0
     b8c:	0e 94 31 08 	call	0x1062	; 0x1062 <fputc>
     b90:	9a 94       	dec	r9
     b92:	f7 cf       	rjmp	.-18     	; 0xb82 <vfprintf+0x372>
     b94:	8a 94       	dec	r8
     b96:	f3 01       	movw	r30, r6
     b98:	e8 0d       	add	r30, r8
     b9a:	f1 1d       	adc	r31, r1
     b9c:	80 81       	ld	r24, Z
     b9e:	b6 01       	movw	r22, r12
     ba0:	90 e0       	ldi	r25, 0x00	; 0
     ba2:	0e 94 31 08 	call	0x1062	; 0x1062 <fputc>
     ba6:	81 10       	cpse	r8, r1
     ba8:	f5 cf       	rjmp	.-22     	; 0xb94 <vfprintf+0x384>
     baa:	22 20       	and	r2, r2
     bac:	09 f4       	brne	.+2      	; 0xbb0 <vfprintf+0x3a0>
     bae:	42 ce       	rjmp	.-892    	; 0x834 <vfprintf+0x24>
     bb0:	b6 01       	movw	r22, r12
     bb2:	80 e2       	ldi	r24, 0x20	; 32
     bb4:	90 e0       	ldi	r25, 0x00	; 0
     bb6:	0e 94 31 08 	call	0x1062	; 0x1062 <fputc>
     bba:	2a 94       	dec	r2
     bbc:	f6 cf       	rjmp	.-20     	; 0xbaa <vfprintf+0x39a>
     bbe:	f6 01       	movw	r30, r12
     bc0:	86 81       	ldd	r24, Z+6	; 0x06
     bc2:	97 81       	ldd	r25, Z+7	; 0x07
     bc4:	02 c0       	rjmp	.+4      	; 0xbca <vfprintf+0x3ba>
     bc6:	8f ef       	ldi	r24, 0xFF	; 255
     bc8:	9f ef       	ldi	r25, 0xFF	; 255
     bca:	2b 96       	adiw	r28, 0x0b	; 11
     bcc:	e2 e1       	ldi	r30, 0x12	; 18
     bce:	0c 94 e7 08 	jmp	0x11ce	; 0x11ce <__epilogue_restores__>

00000bd2 <dtoa_prf>:
     bd2:	a9 e0       	ldi	r26, 0x09	; 9
     bd4:	b0 e0       	ldi	r27, 0x00	; 0
     bd6:	ef ee       	ldi	r30, 0xEF	; 239
     bd8:	f5 e0       	ldi	r31, 0x05	; 5
     bda:	0c 94 d1 08 	jmp	0x11a2	; 0x11a2 <__prologue_saves__+0xc>
     bde:	6a 01       	movw	r12, r20
     be0:	12 2f       	mov	r17, r18
     be2:	b0 2e       	mov	r11, r16
     be4:	2b e3       	ldi	r18, 0x3B	; 59
     be6:	20 17       	cp	r18, r16
     be8:	20 f0       	brcs	.+8      	; 0xbf2 <dtoa_prf+0x20>
     bea:	ff 24       	eor	r15, r15
     bec:	f3 94       	inc	r15
     bee:	f0 0e       	add	r15, r16
     bf0:	02 c0       	rjmp	.+4      	; 0xbf6 <dtoa_prf+0x24>
     bf2:	2c e3       	ldi	r18, 0x3C	; 60
     bf4:	f2 2e       	mov	r15, r18
     bf6:	0f 2d       	mov	r16, r15
     bf8:	27 e0       	ldi	r18, 0x07	; 7
     bfa:	ae 01       	movw	r20, r28
     bfc:	4f 5f       	subi	r20, 0xFF	; 255
     bfe:	5f 4f       	sbci	r21, 0xFF	; 255
     c00:	0e 94 43 07 	call	0xe86	; 0xe86 <__ftoa_engine>
     c04:	bc 01       	movw	r22, r24
     c06:	49 81       	ldd	r20, Y+1	; 0x01
     c08:	84 2f       	mov	r24, r20
     c0a:	89 70       	andi	r24, 0x09	; 9
     c0c:	81 30       	cpi	r24, 0x01	; 1
     c0e:	31 f0       	breq	.+12     	; 0xc1c <dtoa_prf+0x4a>
     c10:	e1 fc       	sbrc	r14, 1
     c12:	06 c0       	rjmp	.+12     	; 0xc20 <dtoa_prf+0x4e>
     c14:	e0 fe       	sbrs	r14, 0
     c16:	06 c0       	rjmp	.+12     	; 0xc24 <dtoa_prf+0x52>
     c18:	90 e2       	ldi	r25, 0x20	; 32
     c1a:	05 c0       	rjmp	.+10     	; 0xc26 <dtoa_prf+0x54>
     c1c:	9d e2       	ldi	r25, 0x2D	; 45
     c1e:	03 c0       	rjmp	.+6      	; 0xc26 <dtoa_prf+0x54>
     c20:	9b e2       	ldi	r25, 0x2B	; 43
     c22:	01 c0       	rjmp	.+2      	; 0xc26 <dtoa_prf+0x54>
     c24:	90 e0       	ldi	r25, 0x00	; 0
     c26:	5e 2d       	mov	r21, r14
     c28:	50 71       	andi	r21, 0x10	; 16
     c2a:	43 ff       	sbrs	r20, 3
     c2c:	3c c0       	rjmp	.+120    	; 0xca6 <dtoa_prf+0xd4>
     c2e:	91 11       	cpse	r25, r1
     c30:	02 c0       	rjmp	.+4      	; 0xc36 <dtoa_prf+0x64>
     c32:	83 e0       	ldi	r24, 0x03	; 3
     c34:	01 c0       	rjmp	.+2      	; 0xc38 <dtoa_prf+0x66>
     c36:	84 e0       	ldi	r24, 0x04	; 4
     c38:	81 17       	cp	r24, r17
     c3a:	18 f4       	brcc	.+6      	; 0xc42 <dtoa_prf+0x70>
     c3c:	21 2f       	mov	r18, r17
     c3e:	28 1b       	sub	r18, r24
     c40:	01 c0       	rjmp	.+2      	; 0xc44 <dtoa_prf+0x72>
     c42:	20 e0       	ldi	r18, 0x00	; 0
     c44:	51 11       	cpse	r21, r1
     c46:	0b c0       	rjmp	.+22     	; 0xc5e <dtoa_prf+0x8c>
     c48:	f6 01       	movw	r30, r12
     c4a:	82 2f       	mov	r24, r18
     c4c:	30 e2       	ldi	r19, 0x20	; 32
     c4e:	88 23       	and	r24, r24
     c50:	19 f0       	breq	.+6      	; 0xc58 <dtoa_prf+0x86>
     c52:	31 93       	st	Z+, r19
     c54:	81 50       	subi	r24, 0x01	; 1
     c56:	fb cf       	rjmp	.-10     	; 0xc4e <dtoa_prf+0x7c>
     c58:	c2 0e       	add	r12, r18
     c5a:	d1 1c       	adc	r13, r1
     c5c:	20 e0       	ldi	r18, 0x00	; 0
     c5e:	99 23       	and	r25, r25
     c60:	29 f0       	breq	.+10     	; 0xc6c <dtoa_prf+0x9a>
     c62:	d6 01       	movw	r26, r12
     c64:	9c 93       	st	X, r25
     c66:	f6 01       	movw	r30, r12
     c68:	31 96       	adiw	r30, 0x01	; 1
     c6a:	6f 01       	movw	r12, r30
     c6c:	c6 01       	movw	r24, r12
     c6e:	03 96       	adiw	r24, 0x03	; 3
     c70:	e2 fe       	sbrs	r14, 2
     c72:	0a c0       	rjmp	.+20     	; 0xc88 <dtoa_prf+0xb6>
     c74:	3e e4       	ldi	r19, 0x4E	; 78
     c76:	d6 01       	movw	r26, r12
     c78:	3c 93       	st	X, r19
     c7a:	41 e4       	ldi	r20, 0x41	; 65
     c7c:	11 96       	adiw	r26, 0x01	; 1
     c7e:	4c 93       	st	X, r20
     c80:	11 97       	sbiw	r26, 0x01	; 1
     c82:	12 96       	adiw	r26, 0x02	; 2
     c84:	3c 93       	st	X, r19
     c86:	06 c0       	rjmp	.+12     	; 0xc94 <dtoa_prf+0xc2>
     c88:	3e e6       	ldi	r19, 0x6E	; 110
     c8a:	f6 01       	movw	r30, r12
     c8c:	30 83       	st	Z, r19
     c8e:	41 e6       	ldi	r20, 0x61	; 97
     c90:	41 83       	std	Z+1, r20	; 0x01
     c92:	32 83       	std	Z+2, r19	; 0x02
     c94:	fc 01       	movw	r30, r24
     c96:	32 2f       	mov	r19, r18
     c98:	40 e2       	ldi	r20, 0x20	; 32
     c9a:	33 23       	and	r19, r19
     c9c:	09 f4       	brne	.+2      	; 0xca0 <dtoa_prf+0xce>
     c9e:	42 c0       	rjmp	.+132    	; 0xd24 <dtoa_prf+0x152>
     ca0:	41 93       	st	Z+, r20
     ca2:	31 50       	subi	r19, 0x01	; 1
     ca4:	fa cf       	rjmp	.-12     	; 0xc9a <dtoa_prf+0xc8>
     ca6:	42 ff       	sbrs	r20, 2
     ca8:	44 c0       	rjmp	.+136    	; 0xd32 <dtoa_prf+0x160>
     caa:	91 11       	cpse	r25, r1
     cac:	02 c0       	rjmp	.+4      	; 0xcb2 <dtoa_prf+0xe0>
     cae:	83 e0       	ldi	r24, 0x03	; 3
     cb0:	01 c0       	rjmp	.+2      	; 0xcb4 <dtoa_prf+0xe2>
     cb2:	84 e0       	ldi	r24, 0x04	; 4
     cb4:	81 17       	cp	r24, r17
     cb6:	18 f4       	brcc	.+6      	; 0xcbe <dtoa_prf+0xec>
     cb8:	21 2f       	mov	r18, r17
     cba:	28 1b       	sub	r18, r24
     cbc:	01 c0       	rjmp	.+2      	; 0xcc0 <dtoa_prf+0xee>
     cbe:	20 e0       	ldi	r18, 0x00	; 0
     cc0:	51 11       	cpse	r21, r1
     cc2:	0b c0       	rjmp	.+22     	; 0xcda <dtoa_prf+0x108>
     cc4:	f6 01       	movw	r30, r12
     cc6:	82 2f       	mov	r24, r18
     cc8:	30 e2       	ldi	r19, 0x20	; 32
     cca:	88 23       	and	r24, r24
     ccc:	19 f0       	breq	.+6      	; 0xcd4 <dtoa_prf+0x102>
     cce:	31 93       	st	Z+, r19
     cd0:	81 50       	subi	r24, 0x01	; 1
     cd2:	fb cf       	rjmp	.-10     	; 0xcca <dtoa_prf+0xf8>
     cd4:	c2 0e       	add	r12, r18
     cd6:	d1 1c       	adc	r13, r1
     cd8:	20 e0       	ldi	r18, 0x00	; 0
     cda:	99 23       	and	r25, r25
     cdc:	29 f0       	breq	.+10     	; 0xce8 <dtoa_prf+0x116>
     cde:	d6 01       	movw	r26, r12
     ce0:	9c 93       	st	X, r25
     ce2:	f6 01       	movw	r30, r12
     ce4:	31 96       	adiw	r30, 0x01	; 1
     ce6:	6f 01       	movw	r12, r30
     ce8:	c6 01       	movw	r24, r12
     cea:	03 96       	adiw	r24, 0x03	; 3
     cec:	e2 fe       	sbrs	r14, 2
     cee:	0b c0       	rjmp	.+22     	; 0xd06 <dtoa_prf+0x134>
     cf0:	39 e4       	ldi	r19, 0x49	; 73
     cf2:	d6 01       	movw	r26, r12
     cf4:	3c 93       	st	X, r19
     cf6:	3e e4       	ldi	r19, 0x4E	; 78
     cf8:	11 96       	adiw	r26, 0x01	; 1
     cfa:	3c 93       	st	X, r19
     cfc:	11 97       	sbiw	r26, 0x01	; 1
     cfe:	36 e4       	ldi	r19, 0x46	; 70
     d00:	12 96       	adiw	r26, 0x02	; 2
     d02:	3c 93       	st	X, r19
     d04:	07 c0       	rjmp	.+14     	; 0xd14 <dtoa_prf+0x142>
     d06:	39 e6       	ldi	r19, 0x69	; 105
     d08:	f6 01       	movw	r30, r12
     d0a:	30 83       	st	Z, r19
     d0c:	3e e6       	ldi	r19, 0x6E	; 110
     d0e:	31 83       	std	Z+1, r19	; 0x01
     d10:	36 e6       	ldi	r19, 0x66	; 102
     d12:	32 83       	std	Z+2, r19	; 0x02
     d14:	fc 01       	movw	r30, r24
     d16:	32 2f       	mov	r19, r18
     d18:	40 e2       	ldi	r20, 0x20	; 32
     d1a:	33 23       	and	r19, r19
     d1c:	19 f0       	breq	.+6      	; 0xd24 <dtoa_prf+0x152>
     d1e:	41 93       	st	Z+, r20
     d20:	31 50       	subi	r19, 0x01	; 1
     d22:	fb cf       	rjmp	.-10     	; 0xd1a <dtoa_prf+0x148>
     d24:	fc 01       	movw	r30, r24
     d26:	e2 0f       	add	r30, r18
     d28:	f1 1d       	adc	r31, r1
     d2a:	10 82       	st	Z, r1
     d2c:	8e ef       	ldi	r24, 0xFE	; 254
     d2e:	9f ef       	ldi	r25, 0xFF	; 255
     d30:	a6 c0       	rjmp	.+332    	; 0xe7e <dtoa_prf+0x2ac>
     d32:	21 e0       	ldi	r18, 0x01	; 1
     d34:	30 e0       	ldi	r19, 0x00	; 0
     d36:	91 11       	cpse	r25, r1
     d38:	02 c0       	rjmp	.+4      	; 0xd3e <dtoa_prf+0x16c>
     d3a:	20 e0       	ldi	r18, 0x00	; 0
     d3c:	30 e0       	ldi	r19, 0x00	; 0
     d3e:	16 16       	cp	r1, r22
     d40:	17 06       	cpc	r1, r23
     d42:	1c f4       	brge	.+6      	; 0xd4a <dtoa_prf+0x178>
     d44:	fb 01       	movw	r30, r22
     d46:	31 96       	adiw	r30, 0x01	; 1
     d48:	02 c0       	rjmp	.+4      	; 0xd4e <dtoa_prf+0x17c>
     d4a:	e1 e0       	ldi	r30, 0x01	; 1
     d4c:	f0 e0       	ldi	r31, 0x00	; 0
     d4e:	2e 0f       	add	r18, r30
     d50:	3f 1f       	adc	r19, r31
     d52:	bb 20       	and	r11, r11
     d54:	21 f0       	breq	.+8      	; 0xd5e <dtoa_prf+0x18c>
     d56:	eb 2d       	mov	r30, r11
     d58:	f0 e0       	ldi	r31, 0x00	; 0
     d5a:	31 96       	adiw	r30, 0x01	; 1
     d5c:	02 c0       	rjmp	.+4      	; 0xd62 <dtoa_prf+0x190>
     d5e:	e0 e0       	ldi	r30, 0x00	; 0
     d60:	f0 e0       	ldi	r31, 0x00	; 0
     d62:	2e 0f       	add	r18, r30
     d64:	3f 1f       	adc	r19, r31
     d66:	e1 2f       	mov	r30, r17
     d68:	f0 e0       	ldi	r31, 0x00	; 0
     d6a:	2e 17       	cp	r18, r30
     d6c:	3f 07       	cpc	r19, r31
     d6e:	1c f4       	brge	.+6      	; 0xd76 <dtoa_prf+0x1a4>
     d70:	12 1b       	sub	r17, r18
     d72:	21 2f       	mov	r18, r17
     d74:	01 c0       	rjmp	.+2      	; 0xd78 <dtoa_prf+0x1a6>
     d76:	20 e0       	ldi	r18, 0x00	; 0
     d78:	8e 2d       	mov	r24, r14
     d7a:	88 71       	andi	r24, 0x18	; 24
     d7c:	59 f4       	brne	.+22     	; 0xd94 <dtoa_prf+0x1c2>
     d7e:	f6 01       	movw	r30, r12
     d80:	82 2f       	mov	r24, r18
     d82:	30 e2       	ldi	r19, 0x20	; 32
     d84:	88 23       	and	r24, r24
     d86:	19 f0       	breq	.+6      	; 0xd8e <dtoa_prf+0x1bc>
     d88:	31 93       	st	Z+, r19
     d8a:	81 50       	subi	r24, 0x01	; 1
     d8c:	fb cf       	rjmp	.-10     	; 0xd84 <dtoa_prf+0x1b2>
     d8e:	c2 0e       	add	r12, r18
     d90:	d1 1c       	adc	r13, r1
     d92:	20 e0       	ldi	r18, 0x00	; 0
     d94:	99 23       	and	r25, r25
     d96:	29 f0       	breq	.+10     	; 0xda2 <dtoa_prf+0x1d0>
     d98:	d6 01       	movw	r26, r12
     d9a:	9c 93       	st	X, r25
     d9c:	f6 01       	movw	r30, r12
     d9e:	31 96       	adiw	r30, 0x01	; 1
     da0:	6f 01       	movw	r12, r30
     da2:	51 11       	cpse	r21, r1
     da4:	0b c0       	rjmp	.+22     	; 0xdbc <dtoa_prf+0x1ea>
     da6:	f6 01       	movw	r30, r12
     da8:	82 2f       	mov	r24, r18
     daa:	90 e3       	ldi	r25, 0x30	; 48
     dac:	88 23       	and	r24, r24
     dae:	19 f0       	breq	.+6      	; 0xdb6 <dtoa_prf+0x1e4>
     db0:	91 93       	st	Z+, r25
     db2:	81 50       	subi	r24, 0x01	; 1
     db4:	fb cf       	rjmp	.-10     	; 0xdac <dtoa_prf+0x1da>
     db6:	c2 0e       	add	r12, r18
     db8:	d1 1c       	adc	r13, r1
     dba:	20 e0       	ldi	r18, 0x00	; 0
     dbc:	0f 2d       	mov	r16, r15
     dbe:	06 0f       	add	r16, r22
     dc0:	9a 81       	ldd	r25, Y+2	; 0x02
     dc2:	34 2f       	mov	r19, r20
     dc4:	30 71       	andi	r19, 0x10	; 16
     dc6:	44 ff       	sbrs	r20, 4
     dc8:	03 c0       	rjmp	.+6      	; 0xdd0 <dtoa_prf+0x1fe>
     dca:	91 33       	cpi	r25, 0x31	; 49
     dcc:	09 f4       	brne	.+2      	; 0xdd0 <dtoa_prf+0x1fe>
     dce:	01 50       	subi	r16, 0x01	; 1
     dd0:	10 16       	cp	r1, r16
     dd2:	24 f4       	brge	.+8      	; 0xddc <dtoa_prf+0x20a>
     dd4:	09 30       	cpi	r16, 0x09	; 9
     dd6:	18 f0       	brcs	.+6      	; 0xdde <dtoa_prf+0x20c>
     dd8:	08 e0       	ldi	r16, 0x08	; 8
     dda:	01 c0       	rjmp	.+2      	; 0xdde <dtoa_prf+0x20c>
     ddc:	01 e0       	ldi	r16, 0x01	; 1
     dde:	ab 01       	movw	r20, r22
     de0:	77 ff       	sbrs	r23, 7
     de2:	02 c0       	rjmp	.+4      	; 0xde8 <dtoa_prf+0x216>
     de4:	40 e0       	ldi	r20, 0x00	; 0
     de6:	50 e0       	ldi	r21, 0x00	; 0
     de8:	fb 01       	movw	r30, r22
     dea:	e4 1b       	sub	r30, r20
     dec:	f5 0b       	sbc	r31, r21
     dee:	a1 e0       	ldi	r26, 0x01	; 1
     df0:	b0 e0       	ldi	r27, 0x00	; 0
     df2:	ac 0f       	add	r26, r28
     df4:	bd 1f       	adc	r27, r29
     df6:	ea 0f       	add	r30, r26
     df8:	fb 1f       	adc	r31, r27
     dfa:	8e e2       	ldi	r24, 0x2E	; 46
     dfc:	a8 2e       	mov	r10, r24
     dfe:	4b 01       	movw	r8, r22
     e00:	80 1a       	sub	r8, r16
     e02:	91 08       	sbc	r9, r1
     e04:	0b 2d       	mov	r16, r11
     e06:	10 e0       	ldi	r17, 0x00	; 0
     e08:	11 95       	neg	r17
     e0a:	01 95       	neg	r16
     e0c:	11 09       	sbc	r17, r1
     e0e:	4f 3f       	cpi	r20, 0xFF	; 255
     e10:	bf ef       	ldi	r27, 0xFF	; 255
     e12:	5b 07       	cpc	r21, r27
     e14:	21 f4       	brne	.+8      	; 0xe1e <dtoa_prf+0x24c>
     e16:	d6 01       	movw	r26, r12
     e18:	ac 92       	st	X, r10
     e1a:	11 96       	adiw	r26, 0x01	; 1
     e1c:	6d 01       	movw	r12, r26
     e1e:	64 17       	cp	r22, r20
     e20:	75 07       	cpc	r23, r21
     e22:	2c f0       	brlt	.+10     	; 0xe2e <dtoa_prf+0x25c>
     e24:	84 16       	cp	r8, r20
     e26:	95 06       	cpc	r9, r21
     e28:	14 f4       	brge	.+4      	; 0xe2e <dtoa_prf+0x25c>
     e2a:	81 81       	ldd	r24, Z+1	; 0x01
     e2c:	01 c0       	rjmp	.+2      	; 0xe30 <dtoa_prf+0x25e>
     e2e:	80 e3       	ldi	r24, 0x30	; 48
     e30:	41 50       	subi	r20, 0x01	; 1
     e32:	51 09       	sbc	r21, r1
     e34:	31 96       	adiw	r30, 0x01	; 1
     e36:	d6 01       	movw	r26, r12
     e38:	11 96       	adiw	r26, 0x01	; 1
     e3a:	7d 01       	movw	r14, r26
     e3c:	40 17       	cp	r20, r16
     e3e:	51 07       	cpc	r21, r17
     e40:	24 f0       	brlt	.+8      	; 0xe4a <dtoa_prf+0x278>
     e42:	d6 01       	movw	r26, r12
     e44:	8c 93       	st	X, r24
     e46:	67 01       	movw	r12, r14
     e48:	e2 cf       	rjmp	.-60     	; 0xe0e <dtoa_prf+0x23c>
     e4a:	64 17       	cp	r22, r20
     e4c:	75 07       	cpc	r23, r21
     e4e:	39 f4       	brne	.+14     	; 0xe5e <dtoa_prf+0x28c>
     e50:	96 33       	cpi	r25, 0x36	; 54
     e52:	20 f4       	brcc	.+8      	; 0xe5c <dtoa_prf+0x28a>
     e54:	95 33       	cpi	r25, 0x35	; 53
     e56:	19 f4       	brne	.+6      	; 0xe5e <dtoa_prf+0x28c>
     e58:	31 11       	cpse	r19, r1
     e5a:	01 c0       	rjmp	.+2      	; 0xe5e <dtoa_prf+0x28c>
     e5c:	81 e3       	ldi	r24, 0x31	; 49
     e5e:	f6 01       	movw	r30, r12
     e60:	80 83       	st	Z, r24
     e62:	f7 01       	movw	r30, r14
     e64:	82 2f       	mov	r24, r18
     e66:	90 e2       	ldi	r25, 0x20	; 32
     e68:	88 23       	and	r24, r24
     e6a:	19 f0       	breq	.+6      	; 0xe72 <dtoa_prf+0x2a0>
     e6c:	91 93       	st	Z+, r25
     e6e:	81 50       	subi	r24, 0x01	; 1
     e70:	fb cf       	rjmp	.-10     	; 0xe68 <dtoa_prf+0x296>
     e72:	f7 01       	movw	r30, r14
     e74:	e2 0f       	add	r30, r18
     e76:	f1 1d       	adc	r31, r1
     e78:	10 82       	st	Z, r1
     e7a:	80 e0       	ldi	r24, 0x00	; 0
     e7c:	90 e0       	ldi	r25, 0x00	; 0
     e7e:	29 96       	adiw	r28, 0x09	; 9
     e80:	ec e0       	ldi	r30, 0x0C	; 12
     e82:	0c 94 ed 08 	jmp	0x11da	; 0x11da <__epilogue_restores__+0xc>

00000e86 <__ftoa_engine>:
     e86:	28 30       	cpi	r18, 0x08	; 8
     e88:	08 f0       	brcs	.+2      	; 0xe8c <__ftoa_engine+0x6>
     e8a:	27 e0       	ldi	r18, 0x07	; 7
     e8c:	33 27       	eor	r19, r19
     e8e:	da 01       	movw	r26, r20
     e90:	99 0f       	add	r25, r25
     e92:	31 1d       	adc	r19, r1
     e94:	87 fd       	sbrc	r24, 7
     e96:	91 60       	ori	r25, 0x01	; 1
     e98:	00 96       	adiw	r24, 0x00	; 0
     e9a:	61 05       	cpc	r22, r1
     e9c:	71 05       	cpc	r23, r1
     e9e:	39 f4       	brne	.+14     	; 0xeae <__ftoa_engine+0x28>
     ea0:	32 60       	ori	r19, 0x02	; 2
     ea2:	2e 5f       	subi	r18, 0xFE	; 254
     ea4:	3d 93       	st	X+, r19
     ea6:	30 e3       	ldi	r19, 0x30	; 48
     ea8:	2a 95       	dec	r18
     eaa:	e1 f7       	brne	.-8      	; 0xea4 <__ftoa_engine+0x1e>
     eac:	08 95       	ret
     eae:	9f 3f       	cpi	r25, 0xFF	; 255
     eb0:	30 f0       	brcs	.+12     	; 0xebe <__ftoa_engine+0x38>
     eb2:	80 38       	cpi	r24, 0x80	; 128
     eb4:	71 05       	cpc	r23, r1
     eb6:	61 05       	cpc	r22, r1
     eb8:	09 f0       	breq	.+2      	; 0xebc <__ftoa_engine+0x36>
     eba:	3c 5f       	subi	r19, 0xFC	; 252
     ebc:	3c 5f       	subi	r19, 0xFC	; 252
     ebe:	3d 93       	st	X+, r19
     ec0:	91 30       	cpi	r25, 0x01	; 1
     ec2:	08 f0       	brcs	.+2      	; 0xec6 <__ftoa_engine+0x40>
     ec4:	80 68       	ori	r24, 0x80	; 128
     ec6:	91 1d       	adc	r25, r1
     ec8:	df 93       	push	r29
     eca:	cf 93       	push	r28
     ecc:	1f 93       	push	r17
     ece:	0f 93       	push	r16
     ed0:	ff 92       	push	r15
     ed2:	ef 92       	push	r14
     ed4:	19 2f       	mov	r17, r25
     ed6:	98 7f       	andi	r25, 0xF8	; 248
     ed8:	96 95       	lsr	r25
     eda:	e9 2f       	mov	r30, r25
     edc:	96 95       	lsr	r25
     ede:	96 95       	lsr	r25
     ee0:	e9 0f       	add	r30, r25
     ee2:	ff 27       	eor	r31, r31
     ee4:	e2 55       	subi	r30, 0x52	; 82
     ee6:	ff 4f       	sbci	r31, 0xFF	; 255
     ee8:	99 27       	eor	r25, r25
     eea:	33 27       	eor	r19, r19
     eec:	ee 24       	eor	r14, r14
     eee:	ff 24       	eor	r15, r15
     ef0:	a7 01       	movw	r20, r14
     ef2:	e7 01       	movw	r28, r14
     ef4:	05 90       	lpm	r0, Z+
     ef6:	08 94       	sec
     ef8:	07 94       	ror	r0
     efa:	28 f4       	brcc	.+10     	; 0xf06 <__ftoa_engine+0x80>
     efc:	36 0f       	add	r19, r22
     efe:	e7 1e       	adc	r14, r23
     f00:	f8 1e       	adc	r15, r24
     f02:	49 1f       	adc	r20, r25
     f04:	51 1d       	adc	r21, r1
     f06:	66 0f       	add	r22, r22
     f08:	77 1f       	adc	r23, r23
     f0a:	88 1f       	adc	r24, r24
     f0c:	99 1f       	adc	r25, r25
     f0e:	06 94       	lsr	r0
     f10:	a1 f7       	brne	.-24     	; 0xefa <__ftoa_engine+0x74>
     f12:	05 90       	lpm	r0, Z+
     f14:	07 94       	ror	r0
     f16:	28 f4       	brcc	.+10     	; 0xf22 <__ftoa_engine+0x9c>
     f18:	e7 0e       	add	r14, r23
     f1a:	f8 1e       	adc	r15, r24
     f1c:	49 1f       	adc	r20, r25
     f1e:	56 1f       	adc	r21, r22
     f20:	c1 1d       	adc	r28, r1
     f22:	77 0f       	add	r23, r23
     f24:	88 1f       	adc	r24, r24
     f26:	99 1f       	adc	r25, r25
     f28:	66 1f       	adc	r22, r22
     f2a:	06 94       	lsr	r0
     f2c:	a1 f7       	brne	.-24     	; 0xf16 <__ftoa_engine+0x90>
     f2e:	05 90       	lpm	r0, Z+
     f30:	07 94       	ror	r0
     f32:	28 f4       	brcc	.+10     	; 0xf3e <__ftoa_engine+0xb8>
     f34:	f8 0e       	add	r15, r24
     f36:	49 1f       	adc	r20, r25
     f38:	56 1f       	adc	r21, r22
     f3a:	c7 1f       	adc	r28, r23
     f3c:	d1 1d       	adc	r29, r1
     f3e:	88 0f       	add	r24, r24
     f40:	99 1f       	adc	r25, r25
     f42:	66 1f       	adc	r22, r22
     f44:	77 1f       	adc	r23, r23
     f46:	06 94       	lsr	r0
     f48:	a1 f7       	brne	.-24     	; 0xf32 <__ftoa_engine+0xac>
     f4a:	05 90       	lpm	r0, Z+
     f4c:	07 94       	ror	r0
     f4e:	20 f4       	brcc	.+8      	; 0xf58 <__ftoa_engine+0xd2>
     f50:	49 0f       	add	r20, r25
     f52:	56 1f       	adc	r21, r22
     f54:	c7 1f       	adc	r28, r23
     f56:	d8 1f       	adc	r29, r24
     f58:	99 0f       	add	r25, r25
     f5a:	66 1f       	adc	r22, r22
     f5c:	77 1f       	adc	r23, r23
     f5e:	88 1f       	adc	r24, r24
     f60:	06 94       	lsr	r0
     f62:	a9 f7       	brne	.-22     	; 0xf4e <__ftoa_engine+0xc8>
     f64:	84 91       	lpm	r24, Z
     f66:	10 95       	com	r17
     f68:	17 70       	andi	r17, 0x07	; 7
     f6a:	41 f0       	breq	.+16     	; 0xf7c <__ftoa_engine+0xf6>
     f6c:	d6 95       	lsr	r29
     f6e:	c7 95       	ror	r28
     f70:	57 95       	ror	r21
     f72:	47 95       	ror	r20
     f74:	f7 94       	ror	r15
     f76:	e7 94       	ror	r14
     f78:	1a 95       	dec	r17
     f7a:	c1 f7       	brne	.-16     	; 0xf6c <__ftoa_engine+0xe6>
     f7c:	e4 e5       	ldi	r30, 0x54	; 84
     f7e:	f0 e0       	ldi	r31, 0x00	; 0
     f80:	68 94       	set
     f82:	15 90       	lpm	r1, Z+
     f84:	15 91       	lpm	r17, Z+
     f86:	35 91       	lpm	r19, Z+
     f88:	65 91       	lpm	r22, Z+
     f8a:	95 91       	lpm	r25, Z+
     f8c:	05 90       	lpm	r0, Z+
     f8e:	7f e2       	ldi	r23, 0x2F	; 47
     f90:	73 95       	inc	r23
     f92:	e1 18       	sub	r14, r1
     f94:	f1 0a       	sbc	r15, r17
     f96:	43 0b       	sbc	r20, r19
     f98:	56 0b       	sbc	r21, r22
     f9a:	c9 0b       	sbc	r28, r25
     f9c:	d0 09       	sbc	r29, r0
     f9e:	c0 f7       	brcc	.-16     	; 0xf90 <__ftoa_engine+0x10a>
     fa0:	e1 0c       	add	r14, r1
     fa2:	f1 1e       	adc	r15, r17
     fa4:	43 1f       	adc	r20, r19
     fa6:	56 1f       	adc	r21, r22
     fa8:	c9 1f       	adc	r28, r25
     faa:	d0 1d       	adc	r29, r0
     fac:	7e f4       	brtc	.+30     	; 0xfcc <__ftoa_engine+0x146>
     fae:	70 33       	cpi	r23, 0x30	; 48
     fb0:	11 f4       	brne	.+4      	; 0xfb6 <__ftoa_engine+0x130>
     fb2:	8a 95       	dec	r24
     fb4:	e6 cf       	rjmp	.-52     	; 0xf82 <__ftoa_engine+0xfc>
     fb6:	e8 94       	clt
     fb8:	01 50       	subi	r16, 0x01	; 1
     fba:	30 f0       	brcs	.+12     	; 0xfc8 <__ftoa_engine+0x142>
     fbc:	08 0f       	add	r16, r24
     fbe:	0a f4       	brpl	.+2      	; 0xfc2 <__ftoa_engine+0x13c>
     fc0:	00 27       	eor	r16, r16
     fc2:	02 17       	cp	r16, r18
     fc4:	08 f4       	brcc	.+2      	; 0xfc8 <__ftoa_engine+0x142>
     fc6:	20 2f       	mov	r18, r16
     fc8:	23 95       	inc	r18
     fca:	02 2f       	mov	r16, r18
     fcc:	7a 33       	cpi	r23, 0x3A	; 58
     fce:	28 f0       	brcs	.+10     	; 0xfda <__ftoa_engine+0x154>
     fd0:	79 e3       	ldi	r23, 0x39	; 57
     fd2:	7d 93       	st	X+, r23
     fd4:	2a 95       	dec	r18
     fd6:	e9 f7       	brne	.-6      	; 0xfd2 <__ftoa_engine+0x14c>
     fd8:	10 c0       	rjmp	.+32     	; 0xffa <__ftoa_engine+0x174>
     fda:	7d 93       	st	X+, r23
     fdc:	2a 95       	dec	r18
     fde:	89 f6       	brne	.-94     	; 0xf82 <__ftoa_engine+0xfc>
     fe0:	06 94       	lsr	r0
     fe2:	97 95       	ror	r25
     fe4:	67 95       	ror	r22
     fe6:	37 95       	ror	r19
     fe8:	17 95       	ror	r17
     fea:	17 94       	ror	r1
     fec:	e1 18       	sub	r14, r1
     fee:	f1 0a       	sbc	r15, r17
     ff0:	43 0b       	sbc	r20, r19
     ff2:	56 0b       	sbc	r21, r22
     ff4:	c9 0b       	sbc	r28, r25
     ff6:	d0 09       	sbc	r29, r0
     ff8:	98 f0       	brcs	.+38     	; 0x1020 <__ftoa_engine+0x19a>
     ffa:	23 95       	inc	r18
     ffc:	7e 91       	ld	r23, -X
     ffe:	73 95       	inc	r23
    1000:	7a 33       	cpi	r23, 0x3A	; 58
    1002:	08 f0       	brcs	.+2      	; 0x1006 <__ftoa_engine+0x180>
    1004:	70 e3       	ldi	r23, 0x30	; 48
    1006:	7c 93       	st	X, r23
    1008:	20 13       	cpse	r18, r16
    100a:	b8 f7       	brcc	.-18     	; 0xffa <__ftoa_engine+0x174>
    100c:	7e 91       	ld	r23, -X
    100e:	70 61       	ori	r23, 0x10	; 16
    1010:	7d 93       	st	X+, r23
    1012:	30 f0       	brcs	.+12     	; 0x1020 <__ftoa_engine+0x19a>
    1014:	83 95       	inc	r24
    1016:	71 e3       	ldi	r23, 0x31	; 49
    1018:	7d 93       	st	X+, r23
    101a:	70 e3       	ldi	r23, 0x30	; 48
    101c:	2a 95       	dec	r18
    101e:	e1 f7       	brne	.-8      	; 0x1018 <__ftoa_engine+0x192>
    1020:	11 24       	eor	r1, r1
    1022:	ef 90       	pop	r14
    1024:	ff 90       	pop	r15
    1026:	0f 91       	pop	r16
    1028:	1f 91       	pop	r17
    102a:	cf 91       	pop	r28
    102c:	df 91       	pop	r29
    102e:	99 27       	eor	r25, r25
    1030:	87 fd       	sbrc	r24, 7
    1032:	90 95       	com	r25
    1034:	08 95       	ret

00001036 <strnlen_P>:
    1036:	fc 01       	movw	r30, r24
    1038:	05 90       	lpm	r0, Z+
    103a:	61 50       	subi	r22, 0x01	; 1
    103c:	70 40       	sbci	r23, 0x00	; 0
    103e:	01 10       	cpse	r0, r1
    1040:	d8 f7       	brcc	.-10     	; 0x1038 <strnlen_P+0x2>
    1042:	80 95       	com	r24
    1044:	90 95       	com	r25
    1046:	8e 0f       	add	r24, r30
    1048:	9f 1f       	adc	r25, r31
    104a:	08 95       	ret

0000104c <strnlen>:
    104c:	fc 01       	movw	r30, r24
    104e:	61 50       	subi	r22, 0x01	; 1
    1050:	70 40       	sbci	r23, 0x00	; 0
    1052:	01 90       	ld	r0, Z+
    1054:	01 10       	cpse	r0, r1
    1056:	d8 f7       	brcc	.-10     	; 0x104e <strnlen+0x2>
    1058:	80 95       	com	r24
    105a:	90 95       	com	r25
    105c:	8e 0f       	add	r24, r30
    105e:	9f 1f       	adc	r25, r31
    1060:	08 95       	ret

00001062 <fputc>:
    1062:	0f 93       	push	r16
    1064:	1f 93       	push	r17
    1066:	cf 93       	push	r28
    1068:	df 93       	push	r29
    106a:	fb 01       	movw	r30, r22
    106c:	23 81       	ldd	r18, Z+3	; 0x03
    106e:	21 fd       	sbrc	r18, 1
    1070:	03 c0       	rjmp	.+6      	; 0x1078 <fputc+0x16>
    1072:	8f ef       	ldi	r24, 0xFF	; 255
    1074:	9f ef       	ldi	r25, 0xFF	; 255
    1076:	2c c0       	rjmp	.+88     	; 0x10d0 <fputc+0x6e>
    1078:	22 ff       	sbrs	r18, 2
    107a:	16 c0       	rjmp	.+44     	; 0x10a8 <fputc+0x46>
    107c:	46 81       	ldd	r20, Z+6	; 0x06
    107e:	57 81       	ldd	r21, Z+7	; 0x07
    1080:	24 81       	ldd	r18, Z+4	; 0x04
    1082:	35 81       	ldd	r19, Z+5	; 0x05
    1084:	42 17       	cp	r20, r18
    1086:	53 07       	cpc	r21, r19
    1088:	44 f4       	brge	.+16     	; 0x109a <fputc+0x38>
    108a:	a0 81       	ld	r26, Z
    108c:	b1 81       	ldd	r27, Z+1	; 0x01
    108e:	9d 01       	movw	r18, r26
    1090:	2f 5f       	subi	r18, 0xFF	; 255
    1092:	3f 4f       	sbci	r19, 0xFF	; 255
    1094:	31 83       	std	Z+1, r19	; 0x01
    1096:	20 83       	st	Z, r18
    1098:	8c 93       	st	X, r24
    109a:	26 81       	ldd	r18, Z+6	; 0x06
    109c:	37 81       	ldd	r19, Z+7	; 0x07
    109e:	2f 5f       	subi	r18, 0xFF	; 255
    10a0:	3f 4f       	sbci	r19, 0xFF	; 255
    10a2:	37 83       	std	Z+7, r19	; 0x07
    10a4:	26 83       	std	Z+6, r18	; 0x06
    10a6:	14 c0       	rjmp	.+40     	; 0x10d0 <fputc+0x6e>
    10a8:	8b 01       	movw	r16, r22
    10aa:	ec 01       	movw	r28, r24
    10ac:	fb 01       	movw	r30, r22
    10ae:	00 84       	ldd	r0, Z+8	; 0x08
    10b0:	f1 85       	ldd	r31, Z+9	; 0x09
    10b2:	e0 2d       	mov	r30, r0
    10b4:	09 95       	icall
    10b6:	89 2b       	or	r24, r25
    10b8:	e1 f6       	brne	.-72     	; 0x1072 <fputc+0x10>
    10ba:	d8 01       	movw	r26, r16
    10bc:	16 96       	adiw	r26, 0x06	; 6
    10be:	8d 91       	ld	r24, X+
    10c0:	9c 91       	ld	r25, X
    10c2:	17 97       	sbiw	r26, 0x07	; 7
    10c4:	01 96       	adiw	r24, 0x01	; 1
    10c6:	17 96       	adiw	r26, 0x07	; 7
    10c8:	9c 93       	st	X, r25
    10ca:	8e 93       	st	-X, r24
    10cc:	16 97       	sbiw	r26, 0x06	; 6
    10ce:	ce 01       	movw	r24, r28
    10d0:	df 91       	pop	r29
    10d2:	cf 91       	pop	r28
    10d4:	1f 91       	pop	r17
    10d6:	0f 91       	pop	r16
    10d8:	08 95       	ret

000010da <__ultoa_invert>:
    10da:	fa 01       	movw	r30, r20
    10dc:	aa 27       	eor	r26, r26
    10de:	28 30       	cpi	r18, 0x08	; 8
    10e0:	51 f1       	breq	.+84     	; 0x1136 <__ultoa_invert+0x5c>
    10e2:	20 31       	cpi	r18, 0x10	; 16
    10e4:	81 f1       	breq	.+96     	; 0x1146 <__ultoa_invert+0x6c>
    10e6:	e8 94       	clt
    10e8:	6f 93       	push	r22
    10ea:	6e 7f       	andi	r22, 0xFE	; 254
    10ec:	6e 5f       	subi	r22, 0xFE	; 254
    10ee:	7f 4f       	sbci	r23, 0xFF	; 255
    10f0:	8f 4f       	sbci	r24, 0xFF	; 255
    10f2:	9f 4f       	sbci	r25, 0xFF	; 255
    10f4:	af 4f       	sbci	r26, 0xFF	; 255
    10f6:	b1 e0       	ldi	r27, 0x01	; 1
    10f8:	3e d0       	rcall	.+124    	; 0x1176 <__ultoa_invert+0x9c>
    10fa:	b4 e0       	ldi	r27, 0x04	; 4
    10fc:	3c d0       	rcall	.+120    	; 0x1176 <__ultoa_invert+0x9c>
    10fe:	67 0f       	add	r22, r23
    1100:	78 1f       	adc	r23, r24
    1102:	89 1f       	adc	r24, r25
    1104:	9a 1f       	adc	r25, r26
    1106:	a1 1d       	adc	r26, r1
    1108:	68 0f       	add	r22, r24
    110a:	79 1f       	adc	r23, r25
    110c:	8a 1f       	adc	r24, r26
    110e:	91 1d       	adc	r25, r1
    1110:	a1 1d       	adc	r26, r1
    1112:	6a 0f       	add	r22, r26
    1114:	71 1d       	adc	r23, r1
    1116:	81 1d       	adc	r24, r1
    1118:	91 1d       	adc	r25, r1
    111a:	a1 1d       	adc	r26, r1
    111c:	20 d0       	rcall	.+64     	; 0x115e <__ultoa_invert+0x84>
    111e:	09 f4       	brne	.+2      	; 0x1122 <__ultoa_invert+0x48>
    1120:	68 94       	set
    1122:	3f 91       	pop	r19
    1124:	2a e0       	ldi	r18, 0x0A	; 10
    1126:	26 9f       	mul	r18, r22
    1128:	11 24       	eor	r1, r1
    112a:	30 19       	sub	r19, r0
    112c:	30 5d       	subi	r19, 0xD0	; 208
    112e:	31 93       	st	Z+, r19
    1130:	de f6       	brtc	.-74     	; 0x10e8 <__ultoa_invert+0xe>
    1132:	cf 01       	movw	r24, r30
    1134:	08 95       	ret
    1136:	46 2f       	mov	r20, r22
    1138:	47 70       	andi	r20, 0x07	; 7
    113a:	40 5d       	subi	r20, 0xD0	; 208
    113c:	41 93       	st	Z+, r20
    113e:	b3 e0       	ldi	r27, 0x03	; 3
    1140:	0f d0       	rcall	.+30     	; 0x1160 <__ultoa_invert+0x86>
    1142:	c9 f7       	brne	.-14     	; 0x1136 <__ultoa_invert+0x5c>
    1144:	f6 cf       	rjmp	.-20     	; 0x1132 <__ultoa_invert+0x58>
    1146:	46 2f       	mov	r20, r22
    1148:	4f 70       	andi	r20, 0x0F	; 15
    114a:	40 5d       	subi	r20, 0xD0	; 208
    114c:	4a 33       	cpi	r20, 0x3A	; 58
    114e:	18 f0       	brcs	.+6      	; 0x1156 <__ultoa_invert+0x7c>
    1150:	49 5d       	subi	r20, 0xD9	; 217
    1152:	31 fd       	sbrc	r19, 1
    1154:	40 52       	subi	r20, 0x20	; 32
    1156:	41 93       	st	Z+, r20
    1158:	02 d0       	rcall	.+4      	; 0x115e <__ultoa_invert+0x84>
    115a:	a9 f7       	brne	.-22     	; 0x1146 <__ultoa_invert+0x6c>
    115c:	ea cf       	rjmp	.-44     	; 0x1132 <__ultoa_invert+0x58>
    115e:	b4 e0       	ldi	r27, 0x04	; 4
    1160:	a6 95       	lsr	r26
    1162:	97 95       	ror	r25
    1164:	87 95       	ror	r24
    1166:	77 95       	ror	r23
    1168:	67 95       	ror	r22
    116a:	ba 95       	dec	r27
    116c:	c9 f7       	brne	.-14     	; 0x1160 <__ultoa_invert+0x86>
    116e:	00 97       	sbiw	r24, 0x00	; 0
    1170:	61 05       	cpc	r22, r1
    1172:	71 05       	cpc	r23, r1
    1174:	08 95       	ret
    1176:	9b 01       	movw	r18, r22
    1178:	ac 01       	movw	r20, r24
    117a:	0a 2e       	mov	r0, r26
    117c:	06 94       	lsr	r0
    117e:	57 95       	ror	r21
    1180:	47 95       	ror	r20
    1182:	37 95       	ror	r19
    1184:	27 95       	ror	r18
    1186:	ba 95       	dec	r27
    1188:	c9 f7       	brne	.-14     	; 0x117c <__ultoa_invert+0xa2>
    118a:	62 0f       	add	r22, r18
    118c:	73 1f       	adc	r23, r19
    118e:	84 1f       	adc	r24, r20
    1190:	95 1f       	adc	r25, r21
    1192:	a0 1d       	adc	r26, r0
    1194:	08 95       	ret

00001196 <__prologue_saves__>:
    1196:	2f 92       	push	r2
    1198:	3f 92       	push	r3
    119a:	4f 92       	push	r4
    119c:	5f 92       	push	r5
    119e:	6f 92       	push	r6
    11a0:	7f 92       	push	r7
    11a2:	8f 92       	push	r8
    11a4:	9f 92       	push	r9
    11a6:	af 92       	push	r10
    11a8:	bf 92       	push	r11
    11aa:	cf 92       	push	r12
    11ac:	df 92       	push	r13
    11ae:	ef 92       	push	r14
    11b0:	ff 92       	push	r15
    11b2:	0f 93       	push	r16
    11b4:	1f 93       	push	r17
    11b6:	cf 93       	push	r28
    11b8:	df 93       	push	r29
    11ba:	cd b7       	in	r28, 0x3d	; 61
    11bc:	de b7       	in	r29, 0x3e	; 62
    11be:	ca 1b       	sub	r28, r26
    11c0:	db 0b       	sbc	r29, r27
    11c2:	0f b6       	in	r0, 0x3f	; 63
    11c4:	f8 94       	cli
    11c6:	de bf       	out	0x3e, r29	; 62
    11c8:	0f be       	out	0x3f, r0	; 63
    11ca:	cd bf       	out	0x3d, r28	; 61
    11cc:	09 94       	ijmp

000011ce <__epilogue_restores__>:
    11ce:	2a 88       	ldd	r2, Y+18	; 0x12
    11d0:	39 88       	ldd	r3, Y+17	; 0x11
    11d2:	48 88       	ldd	r4, Y+16	; 0x10
    11d4:	5f 84       	ldd	r5, Y+15	; 0x0f
    11d6:	6e 84       	ldd	r6, Y+14	; 0x0e
    11d8:	7d 84       	ldd	r7, Y+13	; 0x0d
    11da:	8c 84       	ldd	r8, Y+12	; 0x0c
    11dc:	9b 84       	ldd	r9, Y+11	; 0x0b
    11de:	aa 84       	ldd	r10, Y+10	; 0x0a
    11e0:	b9 84       	ldd	r11, Y+9	; 0x09
    11e2:	c8 84       	ldd	r12, Y+8	; 0x08
    11e4:	df 80       	ldd	r13, Y+7	; 0x07
    11e6:	ee 80       	ldd	r14, Y+6	; 0x06
    11e8:	fd 80       	ldd	r15, Y+5	; 0x05
    11ea:	0c 81       	ldd	r16, Y+4	; 0x04
    11ec:	1b 81       	ldd	r17, Y+3	; 0x03
    11ee:	aa 81       	ldd	r26, Y+2	; 0x02
    11f0:	b9 81       	ldd	r27, Y+1	; 0x01
    11f2:	ce 0f       	add	r28, r30
    11f4:	d1 1d       	adc	r29, r1
    11f6:	0f b6       	in	r0, 0x3f	; 63
    11f8:	f8 94       	cli
    11fa:	de bf       	out	0x3e, r29	; 62
    11fc:	0f be       	out	0x3f, r0	; 63
    11fe:	cd bf       	out	0x3d, r28	; 61
    1200:	ed 01       	movw	r28, r26
    1202:	08 95       	ret

00001204 <_exit>:
    1204:	f8 94       	cli

00001206 <__stop_program>:
    1206:	ff cf       	rjmp	.-2      	; 0x1206 <__stop_program>
